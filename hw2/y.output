Terminals unused in grammar

   '.'
   STRUCT


Grammar

    0 $accept: program $end

    1 program: program_ingredients

    2 program_ingredients: program_ingredients program_ingredient
    3                    | program_ingredient

    4 program_ingredient: global_variable_decl
    5                   | func_decl
    6                   | func_def

    7 global_variable_decl: scalar_decl
    8                     | array_decl

    9 func_decl: func ';'

   10 func_def: func '{' stmt '}'

   11 func: type ident '(' parameters ')'

   12 type: int_type
   13     | char_type
   14     | other_type
   15     | CONST

   16 int_type: CONST SIGNED LONGLONG INT
   17         | CONST SIGNED LONG INT
   18         | CONST SIGNED SHORT INT
   19         | CONST SIGNED INT
   20         | CONST UNSIGNED LONGLONG INT
   21         | CONST UNSIGNED LONG INT
   22         | CONST UNSIGNED SHORT INT
   23         | CONST UNSIGNED INT
   24         | CONST LONGLONG INT
   25         | CONST LONG INT
   26         | CONST SHORT INT
   27         | CONST INT
   28         | SIGNED LONGLONG INT
   29         | SIGNED LONG INT
   30         | SIGNED SHORT INT
   31         | SIGNED INT
   32         | UNSIGNED LONGLONG INT
   33         | UNSIGNED LONG INT
   34         | UNSIGNED SHORT INT
   35         | UNSIGNED INT
   36         | LONGLONG INT
   37         | LONG INT
   38         | SHORT INT
   39         | INT

   40 char_type: CONST SIGNED LONGLONG
   41          | CONST SIGNED LONG
   42          | CONST SIGNED SHORT
   43          | CONST SIGNED CHAR
   44          | CONST UNSIGNED LONGLONG
   45          | CONST UNSIGNED LONG
   46          | CONST UNSIGNED SHORT
   47          | CONST UNSIGNED CHAR
   48          | CONST LONGLONG
   49          | CONST LONG
   50          | CONST SHORT
   51          | CONST CHAR
   52          | SIGNED LONGLONG
   53          | SIGNED LONG
   54          | SIGNED SHORT
   55          | SIGNED CHAR
   56          | UNSIGNED LONGLONG
   57          | UNSIGNED LONG
   58          | UNSIGNED SHORT
   59          | UNSIGNED CHAR
   60          | LONGLONG
   61          | LONG
   62          | SHORT
   63          | CHAR

   64 other_type: CONST SIGNED
   65           | CONST UNSIGNED
   66           | CONST FLOAT
   67           | CONST DOUBLE
   68           | CONST VOID
   69           | SIGNED
   70           | UNSIGNED
   71           | FLOAT
   72           | DOUBLE
   73           | VOID

   74 ident: ID

   75 init_ident: ID '=' exprs

   76 expr: expr '+' expr
   77     | expr '-' expr
   78     | expr '*' expr
   79     | expr '/' expr
   80     | expr '%' expr
   81     | expr INC
   82     | expr DEC
   83     | INC expr
   84     | DEC expr
   85     | expr '<' expr
   86     | expr LEQ expr
   87     | expr '>' expr
   88     | expr GEQ expr
   89     | expr EQL expr
   90     | expr NEQ expr
   91     | expr '=' expr
   92     | expr LAND expr
   93     | expr LOR expr
   94     | '!' expr
   95     | '~' expr
   96     | expr '^' expr
   97     | expr '&' expr
   98     | expr '|' expr
   99     | expr LSHIFT expr
  100     | expr RSHIFT expr
  101     | '[' expr ']'
  102     | '(' expr ')'
  103     | '-' expr
  104     | '+' expr
  105     | '*' expr
  106     | '&' expr
  107     | literal
  108     | variable
  109     | NUL

  110 literal: INT_NUM
  111        | POS_INT_NUM
  112        | NEG_INT_NUM
  113        | FLOAT_NUM
  114        | POS_FLOAT_NUM
  115        | NEG_FLOAT_NUM
  116        | CHAR_START char CHAR_END
  117        | STRING_START string STRING_END

  118 char: CHAR
  119     | ESCAPE_START ESCAPE_CHAR
  120     | %empty

  121 string: STR
  122       | STR ESCAPE_START ESCAPE_CHAR STR
  123       | %empty

  124 variable: ident
  125         | ident arr_dim

  126 exprs: expr
  127      | exprs ',' expr

  128 scalar_decl: type idents ';'
  129            | type '*' idents ';'

  130 idents: idents ',' ident
  131       | idents ',' init_ident
  132       | ident
  133       | init_ident

  134 array_decl: type arrays ';'

  135 arrays: array ',' arrays
  136       | array

  137 array: ident arr_dim
  138      | ident arr_dim '=' arr_content

  139 arr_dim: '[' expr ']'
  140        | arr_dim '[' expr ']'

  141 arr_content: '{' exprs '}'
  142            | '{' arr_content '}'
  143            | arr_content ',' arr_content

  144 parameters: type ident
  145           | type '*' ident
  146           | parameters ',' parameters
  147           | %empty

  148 stmt: expr ';'
  149     | IF '(' expr ')' compound_stmt
  150     | IF '(' expr ')' compound_stmt ELSE compound_stmt
  151     | SWITCH '(' expr ')' '{' switch_clauses '}'
  152     | WHILE '(' expr ')' stmt
  153     | DO stmt WHILE '(' expr ')' ';'
  154     | for_stmt
  155     | RETURN expr ';'
  156     | RETURN ';'
  157     | BREAK ';'
  158     | CONTINUE ';'
  159     | compound_stmt

  160 switch_clauses: switch_clause switch_clauses
  161               | %empty

  162 switch_clause: CASE expr ':' stmt
  163              | DEFAULT ':' stmt

  164 for_stmt: FOR '(' exprs ';' exprs ';' exprs ')' stmt
  165         | FOR '(' exprs ';' exprs ';' ')' stmt
  166         | FOR '(' exprs ';' ';' exprs ')' stmt
  167         | FOR '(' ';' exprs ';' exprs ')' stmt
  168         | FOR '(' ';' ';' exprs ')' stmt
  169         | FOR '(' ';' exprs ';' ')' stmt
  170         | FOR '(' exprs ';' ';' ')' stmt
  171         | FOR '(' ';' ';' ')' stmt

  172 compound_stmt: '{' '}'
  173              | '{' stmt_or_decls '}'

  174 stmt_or_decls: stmt_or_decl stmt_or_decls
  175              | stmt_or_decl

  176 stmt_or_decl: stmt
  177             | variable_decl

  178 variable_decl: scalar_decl
  179              | array_decl


Terminals, with rules where they appear

$end (0) 0
'!' (33) 94
'%' (37) 80
'&' (38) 97 106
'(' (40) 11 102 149 150 151 152 153 164 165 166 167 168 169 170 171
')' (41) 11 102 149 150 151 152 153 164 165 166 167 168 169 170 171
'*' (42) 78 105 129 145
'+' (43) 76 104
',' (44) 127 130 131 135 143 146
'-' (45) 77 103
'.' (46)
'/' (47) 79
':' (58) 162 163
';' (59) 9 128 129 134 148 153 155 156 157 158 164 165 166 167 168
    169 170 171
'<' (60) 85
'=' (61) 75 91 138
'>' (62) 87
'[' (91) 101 139 140
']' (93) 101 139 140
'^' (94) 96
'{' (123) 10 141 142 151 172 173
'|' (124) 98
'}' (125) 10 141 142 151 172 173
'~' (126) 95
error (256)
INT_NUM (258) 110
POS_INT_NUM (259) 111
NEG_INT_NUM (260) 112
FLOAT_NUM (261) 113
POS_FLOAT_NUM (262) 114
NEG_FLOAT_NUM (263) 115
ID (264) 74 75
INC (265) 81 83
DEC (266) 82 84
LEQ (267) 86
GEQ (268) 88
EQL (269) 89
NEQ (270) 90
LAND (271) 92
LOR (272) 93
CONST (273) 15 16 17 18 19 20 21 22 23 24 25 26 27 40 41 42 43 44 45
    46 47 48 49 50 51 64 65 66 67 68
SIGNED (274) 16 17 18 19 28 29 30 31 40 41 42 43 52 53 54 55 64 69
UNSIGNED (275) 20 21 22 23 32 33 34 35 44 45 46 47 56 57 58 59 65 70
SHORT (276) 18 22 26 30 34 38 42 46 50 54 58 62
LONG (277) 17 21 25 29 33 37 41 45 49 53 57 61
LONGLONG (278) 16 20 24 28 32 36 40 44 48 52 56 60
INT (279) 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39
CHAR (280) 43 47 51 55 59 63 118
DOUBLE (281) 67 72
VOID (282) 68 73
FLOAT (283) 66 71
STRUCT (284)
RETURN (285) 155 156
LSHIFT (286) 99
RSHIFT (287) 100
STR (288) 121 122
NUL (289) 109
FOR (290) 164 165 166 167 168 169 170 171
DO (291) 153
WHILE (292) 152 153
BREAK (293) 157
CONTINUE (294) 158
IF (295) 149 150
ELSE (296) 150
SWITCH (297) 151
CASE (298) 162
DEFAULT (299) 163
CHAR_START (300) 116
CHAR_END (301) 116
ESCAPE_START (302) 119 122
ESCAPE_CHAR (303) 119 122
STRING_START (304) 117
STRING_END (305) 117
UMINUS (306)
UPLUS (307)
DEREF (308)
ADDR (309)


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
program (79)
    on left: 1, on right: 0
program_ingredients (80)
    on left: 2 3, on right: 1 2
program_ingredient (81)
    on left: 4 5 6, on right: 2 3
global_variable_decl (82)
    on left: 7 8, on right: 4
func_decl (83)
    on left: 9, on right: 5
func_def (84)
    on left: 10, on right: 6
func (85)
    on left: 11, on right: 9 10
type (86)
    on left: 12 13 14 15, on right: 11 128 129 134 144 145
int_type (87)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34 35 36 37 38 39, on right: 12
char_type (88)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 60 61 62 63, on right: 13
other_type (89)
    on left: 64 65 66 67 68 69 70 71 72 73, on right: 14
ident (90)
    on left: 74, on right: 11 124 125 130 132 137 138 144 145
init_ident (91)
    on left: 75, on right: 131 133
expr (92)
    on left: 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
    94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109, on right:
    76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
    97 98 99 100 101 102 103 104 105 106 126 127 139 140 148 149 150
    151 152 153 155 162
literal (93)
    on left: 110 111 112 113 114 115 116 117, on right: 107
char (94)
    on left: 118 119 120, on right: 116
string (95)
    on left: 121 122 123, on right: 117
variable (96)
    on left: 124 125, on right: 108
exprs (97)
    on left: 126 127, on right: 75 127 141 164 165 166 167 168 169
    170
scalar_decl (98)
    on left: 128 129, on right: 7 178
idents (99)
    on left: 130 131 132 133, on right: 128 129 130 131
array_decl (100)
    on left: 134, on right: 8 179
arrays (101)
    on left: 135 136, on right: 134 135
array (102)
    on left: 137 138, on right: 135 136
arr_dim (103)
    on left: 139 140, on right: 125 137 138 140
arr_content (104)
    on left: 141 142 143, on right: 138 142 143
parameters (105)
    on left: 144 145 146 147, on right: 11 146
stmt (106)
    on left: 148 149 150 151 152 153 154 155 156 157 158 159, on right:
    10 152 153 162 163 164 165 166 167 168 169 170 171 176
switch_clauses (107)
    on left: 160 161, on right: 151 160
switch_clause (108)
    on left: 162 163, on right: 160
for_stmt (109)
    on left: 164 165 166 167 168 169 170 171, on right: 154
compound_stmt (110)
    on left: 172 173, on right: 149 150 159
stmt_or_decls (111)
    on left: 174 175, on right: 173 174
stmt_or_decl (112)
    on left: 176 177, on right: 174 175
variable_decl (113)
    on left: 178 179, on right: 177


State 0

    0 $accept: . program $end

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    program               go to state 12
    program_ingredients   go to state 13
    program_ingredient    go to state 14
    global_variable_decl  go to state 15
    func_decl             go to state 16
    func_def              go to state 17
    func                  go to state 18
    type                  go to state 19
    int_type              go to state 20
    char_type             go to state 21
    other_type            go to state 22
    scalar_decl           go to state 23
    array_decl            go to state 24


State 1

   15 type: CONST .
   16 int_type: CONST . SIGNED LONGLONG INT
   17         | CONST . SIGNED LONG INT
   18         | CONST . SIGNED SHORT INT
   19         | CONST . SIGNED INT
   20         | CONST . UNSIGNED LONGLONG INT
   21         | CONST . UNSIGNED LONG INT
   22         | CONST . UNSIGNED SHORT INT
   23         | CONST . UNSIGNED INT
   24         | CONST . LONGLONG INT
   25         | CONST . LONG INT
   26         | CONST . SHORT INT
   27         | CONST . INT
   40 char_type: CONST . SIGNED LONGLONG
   41          | CONST . SIGNED LONG
   42          | CONST . SIGNED SHORT
   43          | CONST . SIGNED CHAR
   44          | CONST . UNSIGNED LONGLONG
   45          | CONST . UNSIGNED LONG
   46          | CONST . UNSIGNED SHORT
   47          | CONST . UNSIGNED CHAR
   48          | CONST . LONGLONG
   49          | CONST . LONG
   50          | CONST . SHORT
   51          | CONST . CHAR
   64 other_type: CONST . SIGNED
   65           | CONST . UNSIGNED
   66           | CONST . FLOAT
   67           | CONST . DOUBLE
   68           | CONST . VOID

    SIGNED    shift, and go to state 25
    UNSIGNED  shift, and go to state 26
    SHORT     shift, and go to state 27
    LONG      shift, and go to state 28
    LONGLONG  shift, and go to state 29
    INT       shift, and go to state 30
    CHAR      shift, and go to state 31
    DOUBLE    shift, and go to state 32
    VOID      shift, and go to state 33
    FLOAT     shift, and go to state 34

    $default  reduce using rule 15 (type)


State 2

   28 int_type: SIGNED . LONGLONG INT
   29         | SIGNED . LONG INT
   30         | SIGNED . SHORT INT
   31         | SIGNED . INT
   52 char_type: SIGNED . LONGLONG
   53          | SIGNED . LONG
   54          | SIGNED . SHORT
   55          | SIGNED . CHAR
   69 other_type: SIGNED .

    SHORT     shift, and go to state 35
    LONG      shift, and go to state 36
    LONGLONG  shift, and go to state 37
    INT       shift, and go to state 38
    CHAR      shift, and go to state 39

    $default  reduce using rule 69 (other_type)


State 3

   32 int_type: UNSIGNED . LONGLONG INT
   33         | UNSIGNED . LONG INT
   34         | UNSIGNED . SHORT INT
   35         | UNSIGNED . INT
   56 char_type: UNSIGNED . LONGLONG
   57          | UNSIGNED . LONG
   58          | UNSIGNED . SHORT
   59          | UNSIGNED . CHAR
   70 other_type: UNSIGNED .

    SHORT     shift, and go to state 40
    LONG      shift, and go to state 41
    LONGLONG  shift, and go to state 42
    INT       shift, and go to state 43
    CHAR      shift, and go to state 44

    $default  reduce using rule 70 (other_type)


State 4

   38 int_type: SHORT . INT
   62 char_type: SHORT .

    INT  shift, and go to state 45

    $default  reduce using rule 62 (char_type)


State 5

   37 int_type: LONG . INT
   61 char_type: LONG .

    INT  shift, and go to state 46

    $default  reduce using rule 61 (char_type)


State 6

   36 int_type: LONGLONG . INT
   60 char_type: LONGLONG .

    INT  shift, and go to state 47

    $default  reduce using rule 60 (char_type)


State 7

   39 int_type: INT .

    $default  reduce using rule 39 (int_type)


State 8

   63 char_type: CHAR .

    $default  reduce using rule 63 (char_type)


State 9

   72 other_type: DOUBLE .

    $default  reduce using rule 72 (other_type)


State 10

   73 other_type: VOID .

    $default  reduce using rule 73 (other_type)


State 11

   71 other_type: FLOAT .

    $default  reduce using rule 71 (other_type)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 48


State 13

    1 program: program_ingredients .
    2 program_ingredients: program_ingredients . program_ingredient

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 1 (program)

    program_ingredient    go to state 49
    global_variable_decl  go to state 15
    func_decl             go to state 16
    func_def              go to state 17
    func                  go to state 18
    type                  go to state 19
    int_type              go to state 20
    char_type             go to state 21
    other_type            go to state 22
    scalar_decl           go to state 23
    array_decl            go to state 24


State 14

    3 program_ingredients: program_ingredient .

    $default  reduce using rule 3 (program_ingredients)


State 15

    4 program_ingredient: global_variable_decl .

    $default  reduce using rule 4 (program_ingredient)


State 16

    5 program_ingredient: func_decl .

    $default  reduce using rule 5 (program_ingredient)


State 17

    6 program_ingredient: func_def .

    $default  reduce using rule 6 (program_ingredient)


State 18

    9 func_decl: func . ';'
   10 func_def: func . '{' stmt '}'

    ';'  shift, and go to state 50
    '{'  shift, and go to state 51


State 19

   11 func: type . ident '(' parameters ')'
  128 scalar_decl: type . idents ';'
  129            | type . '*' idents ';'
  134 array_decl: type . arrays ';'

    ID   shift, and go to state 52
    '*'  shift, and go to state 53

    ident       go to state 54
    init_ident  go to state 55
    idents      go to state 56
    arrays      go to state 57
    array       go to state 58


State 20

   12 type: int_type .

    $default  reduce using rule 12 (type)


State 21

   13 type: char_type .

    $default  reduce using rule 13 (type)


State 22

   14 type: other_type .

    $default  reduce using rule 14 (type)


State 23

    7 global_variable_decl: scalar_decl .

    $default  reduce using rule 7 (global_variable_decl)


State 24

    8 global_variable_decl: array_decl .

    $default  reduce using rule 8 (global_variable_decl)


State 25

   16 int_type: CONST SIGNED . LONGLONG INT
   17         | CONST SIGNED . LONG INT
   18         | CONST SIGNED . SHORT INT
   19         | CONST SIGNED . INT
   40 char_type: CONST SIGNED . LONGLONG
   41          | CONST SIGNED . LONG
   42          | CONST SIGNED . SHORT
   43          | CONST SIGNED . CHAR
   64 other_type: CONST SIGNED .

    SHORT     shift, and go to state 59
    LONG      shift, and go to state 60
    LONGLONG  shift, and go to state 61
    INT       shift, and go to state 62
    CHAR      shift, and go to state 63

    $default  reduce using rule 64 (other_type)


State 26

   20 int_type: CONST UNSIGNED . LONGLONG INT
   21         | CONST UNSIGNED . LONG INT
   22         | CONST UNSIGNED . SHORT INT
   23         | CONST UNSIGNED . INT
   44 char_type: CONST UNSIGNED . LONGLONG
   45          | CONST UNSIGNED . LONG
   46          | CONST UNSIGNED . SHORT
   47          | CONST UNSIGNED . CHAR
   65 other_type: CONST UNSIGNED .

    SHORT     shift, and go to state 64
    LONG      shift, and go to state 65
    LONGLONG  shift, and go to state 66
    INT       shift, and go to state 67
    CHAR      shift, and go to state 68

    $default  reduce using rule 65 (other_type)


State 27

   26 int_type: CONST SHORT . INT
   50 char_type: CONST SHORT .

    INT  shift, and go to state 69

    $default  reduce using rule 50 (char_type)


State 28

   25 int_type: CONST LONG . INT
   49 char_type: CONST LONG .

    INT  shift, and go to state 70

    $default  reduce using rule 49 (char_type)


State 29

   24 int_type: CONST LONGLONG . INT
   48 char_type: CONST LONGLONG .

    INT  shift, and go to state 71

    $default  reduce using rule 48 (char_type)


State 30

   27 int_type: CONST INT .

    $default  reduce using rule 27 (int_type)


State 31

   51 char_type: CONST CHAR .

    $default  reduce using rule 51 (char_type)


State 32

   67 other_type: CONST DOUBLE .

    $default  reduce using rule 67 (other_type)


State 33

   68 other_type: CONST VOID .

    $default  reduce using rule 68 (other_type)


State 34

   66 other_type: CONST FLOAT .

    $default  reduce using rule 66 (other_type)


State 35

   30 int_type: SIGNED SHORT . INT
   54 char_type: SIGNED SHORT .

    INT  shift, and go to state 72

    $default  reduce using rule 54 (char_type)


State 36

   29 int_type: SIGNED LONG . INT
   53 char_type: SIGNED LONG .

    INT  shift, and go to state 73

    $default  reduce using rule 53 (char_type)


State 37

   28 int_type: SIGNED LONGLONG . INT
   52 char_type: SIGNED LONGLONG .

    INT  shift, and go to state 74

    $default  reduce using rule 52 (char_type)


State 38

   31 int_type: SIGNED INT .

    $default  reduce using rule 31 (int_type)


State 39

   55 char_type: SIGNED CHAR .

    $default  reduce using rule 55 (char_type)


State 40

   34 int_type: UNSIGNED SHORT . INT
   58 char_type: UNSIGNED SHORT .

    INT  shift, and go to state 75

    $default  reduce using rule 58 (char_type)


State 41

   33 int_type: UNSIGNED LONG . INT
   57 char_type: UNSIGNED LONG .

    INT  shift, and go to state 76

    $default  reduce using rule 57 (char_type)


State 42

   32 int_type: UNSIGNED LONGLONG . INT
   56 char_type: UNSIGNED LONGLONG .

    INT  shift, and go to state 77

    $default  reduce using rule 56 (char_type)


State 43

   35 int_type: UNSIGNED INT .

    $default  reduce using rule 35 (int_type)


State 44

   59 char_type: UNSIGNED CHAR .

    $default  reduce using rule 59 (char_type)


State 45

   38 int_type: SHORT INT .

    $default  reduce using rule 38 (int_type)


State 46

   37 int_type: LONG INT .

    $default  reduce using rule 37 (int_type)


State 47

   36 int_type: LONGLONG INT .

    $default  reduce using rule 36 (int_type)


State 48

    0 $accept: program $end .

    $default  accept


State 49

    2 program_ingredients: program_ingredients program_ingredient .

    $default  reduce using rule 2 (program_ingredients)


State 50

    9 func_decl: func ';' .

    $default  reduce using rule 9 (func_decl)


State 51

   10 func_def: func '{' . stmt '}'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 111
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 52

   74 ident: ID .
   75 init_ident: ID . '=' exprs

    '='  shift, and go to state 114

    $default  reduce using rule 74 (ident)


State 53

  129 scalar_decl: type '*' . idents ';'

    ID  shift, and go to state 52

    ident       go to state 115
    init_ident  go to state 55
    idents      go to state 116


State 54

   11 func: type ident . '(' parameters ')'
  132 idents: ident .
  137 array: ident . arr_dim
  138      | ident . arr_dim '=' arr_content

    '['  shift, and go to state 117
    '('  shift, and go to state 118

    $default  reduce using rule 132 (idents)

    arr_dim  go to state 119


State 55

  133 idents: init_ident .

    $default  reduce using rule 133 (idents)


State 56

  128 scalar_decl: type idents . ';'
  130 idents: idents . ',' ident
  131       | idents . ',' init_ident

    ';'  shift, and go to state 120
    ','  shift, and go to state 121


State 57

  134 array_decl: type arrays . ';'

    ';'  shift, and go to state 122


State 58

  135 arrays: array . ',' arrays
  136       | array .

    ','  shift, and go to state 123

    $default  reduce using rule 136 (arrays)


State 59

   18 int_type: CONST SIGNED SHORT . INT
   42 char_type: CONST SIGNED SHORT .

    INT  shift, and go to state 124

    $default  reduce using rule 42 (char_type)


State 60

   17 int_type: CONST SIGNED LONG . INT
   41 char_type: CONST SIGNED LONG .

    INT  shift, and go to state 125

    $default  reduce using rule 41 (char_type)


State 61

   16 int_type: CONST SIGNED LONGLONG . INT
   40 char_type: CONST SIGNED LONGLONG .

    INT  shift, and go to state 126

    $default  reduce using rule 40 (char_type)


State 62

   19 int_type: CONST SIGNED INT .

    $default  reduce using rule 19 (int_type)


State 63

   43 char_type: CONST SIGNED CHAR .

    $default  reduce using rule 43 (char_type)


State 64

   22 int_type: CONST UNSIGNED SHORT . INT
   46 char_type: CONST UNSIGNED SHORT .

    INT  shift, and go to state 127

    $default  reduce using rule 46 (char_type)


State 65

   21 int_type: CONST UNSIGNED LONG . INT
   45 char_type: CONST UNSIGNED LONG .

    INT  shift, and go to state 128

    $default  reduce using rule 45 (char_type)


State 66

   20 int_type: CONST UNSIGNED LONGLONG . INT
   44 char_type: CONST UNSIGNED LONGLONG .

    INT  shift, and go to state 129

    $default  reduce using rule 44 (char_type)


State 67

   23 int_type: CONST UNSIGNED INT .

    $default  reduce using rule 23 (int_type)


State 68

   47 char_type: CONST UNSIGNED CHAR .

    $default  reduce using rule 47 (char_type)


State 69

   26 int_type: CONST SHORT INT .

    $default  reduce using rule 26 (int_type)


State 70

   25 int_type: CONST LONG INT .

    $default  reduce using rule 25 (int_type)


State 71

   24 int_type: CONST LONGLONG INT .

    $default  reduce using rule 24 (int_type)


State 72

   30 int_type: SIGNED SHORT INT .

    $default  reduce using rule 30 (int_type)


State 73

   29 int_type: SIGNED LONG INT .

    $default  reduce using rule 29 (int_type)


State 74

   28 int_type: SIGNED LONGLONG INT .

    $default  reduce using rule 28 (int_type)


State 75

   34 int_type: UNSIGNED SHORT INT .

    $default  reduce using rule 34 (int_type)


State 76

   33 int_type: UNSIGNED LONG INT .

    $default  reduce using rule 33 (int_type)


State 77

   32 int_type: UNSIGNED LONGLONG INT .

    $default  reduce using rule 32 (int_type)


State 78

  110 literal: INT_NUM .

    $default  reduce using rule 110 (literal)


State 79

  111 literal: POS_INT_NUM .

    $default  reduce using rule 111 (literal)


State 80

  112 literal: NEG_INT_NUM .

    $default  reduce using rule 112 (literal)


State 81

  113 literal: FLOAT_NUM .

    $default  reduce using rule 113 (literal)


State 82

  114 literal: POS_FLOAT_NUM .

    $default  reduce using rule 114 (literal)


State 83

  115 literal: NEG_FLOAT_NUM .

    $default  reduce using rule 115 (literal)


State 84

   74 ident: ID .

    $default  reduce using rule 74 (ident)


State 85

  104 expr: '+' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 130
    literal   go to state 109
    variable  go to state 110


State 86

  103 expr: '-' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 131
    literal   go to state 109
    variable  go to state 110


State 87

  105 expr: '*' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 132
    literal   go to state 109
    variable  go to state 110


State 88

   94 expr: '!' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 133
    literal   go to state 109
    variable  go to state 110


State 89

   95 expr: '~' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 134
    literal   go to state 109
    variable  go to state 110


State 90

  106 expr: '&' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 135
    literal   go to state 109
    variable  go to state 110


State 91

   83 expr: INC . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 136
    literal   go to state 109
    variable  go to state 110


State 92

   84 expr: DEC . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 137
    literal   go to state 109
    variable  go to state 110


State 93

  101 expr: '[' . expr ']'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 138
    literal   go to state 109
    variable  go to state 110


State 94

  102 expr: '(' . expr ')'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 139
    literal   go to state 109
    variable  go to state 110


State 95

  172 compound_stmt: '{' . '}'
  173              | '{' . stmt_or_decls '}'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    '}'            shift, and go to state 140
    CONST          shift, and go to state 1
    SIGNED         shift, and go to state 2
    UNSIGNED       shift, and go to state 3
    SHORT          shift, and go to state 4
    LONG           shift, and go to state 5
    LONGLONG       shift, and go to state 6
    INT            shift, and go to state 7
    CHAR           shift, and go to state 8
    DOUBLE         shift, and go to state 9
    VOID           shift, and go to state 10
    FLOAT          shift, and go to state 11
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    type           go to state 141
    int_type       go to state 20
    char_type      go to state 21
    other_type     go to state 22
    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    scalar_decl    go to state 142
    array_decl     go to state 143
    stmt           go to state 144
    for_stmt       go to state 112
    compound_stmt  go to state 113
    stmt_or_decls  go to state 145
    stmt_or_decl   go to state 146
    variable_decl  go to state 147


State 96

  155 stmt: RETURN . expr ';'
  156     | RETURN . ';'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    ';'            shift, and go to state 148
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 149
    literal   go to state 109
    variable  go to state 110


State 97

  109 expr: NUL .

    $default  reduce using rule 109 (expr)


State 98

  164 for_stmt: FOR . '(' exprs ';' exprs ';' exprs ')' stmt
  165         | FOR . '(' exprs ';' exprs ';' ')' stmt
  166         | FOR . '(' exprs ';' ';' exprs ')' stmt
  167         | FOR . '(' ';' exprs ';' exprs ')' stmt
  168         | FOR . '(' ';' ';' exprs ')' stmt
  169         | FOR . '(' ';' exprs ';' ')' stmt
  170         | FOR . '(' exprs ';' ';' ')' stmt
  171         | FOR . '(' ';' ';' ')' stmt

    '('  shift, and go to state 150


State 99

  153 stmt: DO . stmt WHILE '(' expr ')' ';'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 151
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 100

  152 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 152


State 101

  157 stmt: BREAK . ';'

    ';'  shift, and go to state 153


State 102

  158 stmt: CONTINUE . ';'

    ';'  shift, and go to state 154


State 103

  149 stmt: IF . '(' expr ')' compound_stmt
  150     | IF . '(' expr ')' compound_stmt ELSE compound_stmt

    '('  shift, and go to state 155


State 104

  151 stmt: SWITCH . '(' expr ')' '{' switch_clauses '}'

    '('  shift, and go to state 156


State 105

  116 literal: CHAR_START . char CHAR_END

    CHAR          shift, and go to state 157
    ESCAPE_START  shift, and go to state 158

    $default  reduce using rule 120 (char)

    char  go to state 159


State 106

  117 literal: STRING_START . string STRING_END

    STR  shift, and go to state 160

    $default  reduce using rule 123 (string)

    string  go to state 161


State 107

  124 variable: ident .
  125         | ident . arr_dim

    '['  shift, and go to state 117

    $default  reduce using rule 124 (variable)

    arr_dim  go to state 162


State 108

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  148 stmt: expr . ';'

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ';'     shift, and go to state 182
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 109

  107 expr: literal .

    $default  reduce using rule 107 (expr)


State 110

  108 expr: variable .

    $default  reduce using rule 108 (expr)


State 111

   10 func_def: func '{' stmt . '}'

    '}'  shift, and go to state 185


State 112

  154 stmt: for_stmt .

    $default  reduce using rule 154 (stmt)


State 113

  159 stmt: compound_stmt .

    $default  reduce using rule 159 (stmt)


State 114

   75 init_ident: ID '=' . exprs

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 186
    literal   go to state 109
    variable  go to state 110
    exprs     go to state 187


State 115

  132 idents: ident .

    $default  reduce using rule 132 (idents)


State 116

  129 scalar_decl: type '*' idents . ';'
  130 idents: idents . ',' ident
  131       | idents . ',' init_ident

    ';'  shift, and go to state 188
    ','  shift, and go to state 121


State 117

  139 arr_dim: '[' . expr ']'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 189
    literal   go to state 109
    variable  go to state 110


State 118

   11 func: type ident '(' . parameters ')'

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 147 (parameters)

    type        go to state 190
    int_type    go to state 20
    char_type   go to state 21
    other_type  go to state 22
    parameters  go to state 191


State 119

  137 array: ident arr_dim .
  138      | ident arr_dim . '=' arr_content
  140 arr_dim: arr_dim . '[' expr ']'

    '='  shift, and go to state 192
    '['  shift, and go to state 193

    $default  reduce using rule 137 (array)


State 120

  128 scalar_decl: type idents ';' .

    $default  reduce using rule 128 (scalar_decl)


State 121

  130 idents: idents ',' . ident
  131       | idents ',' . init_ident

    ID  shift, and go to state 52

    ident       go to state 194
    init_ident  go to state 195


State 122

  134 array_decl: type arrays ';' .

    $default  reduce using rule 134 (array_decl)


State 123

  135 arrays: array ',' . arrays

    ID  shift, and go to state 84

    ident   go to state 196
    arrays  go to state 197
    array   go to state 58


State 124

   18 int_type: CONST SIGNED SHORT INT .

    $default  reduce using rule 18 (int_type)


State 125

   17 int_type: CONST SIGNED LONG INT .

    $default  reduce using rule 17 (int_type)


State 126

   16 int_type: CONST SIGNED LONGLONG INT .

    $default  reduce using rule 16 (int_type)


State 127

   22 int_type: CONST UNSIGNED SHORT INT .

    $default  reduce using rule 22 (int_type)


State 128

   21 int_type: CONST UNSIGNED LONG INT .

    $default  reduce using rule 21 (int_type)


State 129

   20 int_type: CONST UNSIGNED LONGLONG INT .

    $default  reduce using rule 20 (int_type)


State 130

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  104     | '+' expr .

    $default  reduce using rule 104 (expr)


State 131

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  103     | '-' expr .

    $default  reduce using rule 103 (expr)


State 132

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  105     | '*' expr .

    $default  reduce using rule 105 (expr)


State 133

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   94     | '!' expr .
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 94 (expr)


State 134

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   95     | '~' expr .
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 95 (expr)


State 135

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  106     | '&' expr .

    $default  reduce using rule 106 (expr)


State 136

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   83     | INC expr .
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 83 (expr)


State 137

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   84     | DEC expr .
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 84 (expr)


State 138

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  101     | '[' expr . ']'

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ']'     shift, and go to state 198
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 139

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  102     | '(' expr . ')'

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ')'     shift, and go to state 199
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 140

  172 compound_stmt: '{' '}' .

    $default  reduce using rule 172 (compound_stmt)


State 141

  128 scalar_decl: type . idents ';'
  129            | type . '*' idents ';'
  134 array_decl: type . arrays ';'

    ID   shift, and go to state 52
    '*'  shift, and go to state 53

    ident       go to state 200
    init_ident  go to state 55
    idents      go to state 56
    arrays      go to state 57
    array       go to state 58


State 142

  178 variable_decl: scalar_decl .

    $default  reduce using rule 178 (variable_decl)


State 143

  179 variable_decl: array_decl .

    $default  reduce using rule 179 (variable_decl)


State 144

  176 stmt_or_decl: stmt .

    $default  reduce using rule 176 (stmt_or_decl)


State 145

  173 compound_stmt: '{' stmt_or_decls . '}'

    '}'  shift, and go to state 201


State 146

  174 stmt_or_decls: stmt_or_decl . stmt_or_decls
  175              | stmt_or_decl .

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    CONST          shift, and go to state 1
    SIGNED         shift, and go to state 2
    UNSIGNED       shift, and go to state 3
    SHORT          shift, and go to state 4
    LONG           shift, and go to state 5
    LONGLONG       shift, and go to state 6
    INT            shift, and go to state 7
    CHAR           shift, and go to state 8
    DOUBLE         shift, and go to state 9
    VOID           shift, and go to state 10
    FLOAT          shift, and go to state 11
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    $default  reduce using rule 175 (stmt_or_decls)

    type           go to state 141
    int_type       go to state 20
    char_type      go to state 21
    other_type     go to state 22
    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    scalar_decl    go to state 142
    array_decl     go to state 143
    stmt           go to state 144
    for_stmt       go to state 112
    compound_stmt  go to state 113
    stmt_or_decls  go to state 202
    stmt_or_decl   go to state 146
    variable_decl  go to state 147


State 147

  177 stmt_or_decl: variable_decl .

    $default  reduce using rule 177 (stmt_or_decl)


State 148

  156 stmt: RETURN ';' .

    $default  reduce using rule 156 (stmt)


State 149

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  155 stmt: RETURN expr . ';'

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ';'     shift, and go to state 203
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 150

  164 for_stmt: FOR '(' . exprs ';' exprs ';' exprs ')' stmt
  165         | FOR '(' . exprs ';' exprs ';' ')' stmt
  166         | FOR '(' . exprs ';' ';' exprs ')' stmt
  167         | FOR '(' . ';' exprs ';' exprs ')' stmt
  168         | FOR '(' . ';' ';' exprs ')' stmt
  169         | FOR '(' . ';' exprs ';' ')' stmt
  170         | FOR '(' . exprs ';' ';' ')' stmt
  171         | FOR '(' . ';' ';' ')' stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    ';'            shift, and go to state 204
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 186
    literal   go to state 109
    variable  go to state 110
    exprs     go to state 205


State 151

  153 stmt: DO stmt . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 206


State 152

  152 stmt: WHILE '(' . expr ')' stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 207
    literal   go to state 109
    variable  go to state 110


State 153

  157 stmt: BREAK ';' .

    $default  reduce using rule 157 (stmt)


State 154

  158 stmt: CONTINUE ';' .

    $default  reduce using rule 158 (stmt)


State 155

  149 stmt: IF '(' . expr ')' compound_stmt
  150     | IF '(' . expr ')' compound_stmt ELSE compound_stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 208
    literal   go to state 109
    variable  go to state 110


State 156

  151 stmt: SWITCH '(' . expr ')' '{' switch_clauses '}'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 209
    literal   go to state 109
    variable  go to state 110


State 157

  118 char: CHAR .

    $default  reduce using rule 118 (char)


State 158

  119 char: ESCAPE_START . ESCAPE_CHAR

    ESCAPE_CHAR  shift, and go to state 210


State 159

  116 literal: CHAR_START char . CHAR_END

    CHAR_END  shift, and go to state 211


State 160

  121 string: STR .
  122       | STR . ESCAPE_START ESCAPE_CHAR STR

    ESCAPE_START  shift, and go to state 212

    $default  reduce using rule 121 (string)


State 161

  117 literal: STRING_START string . STRING_END

    STRING_END  shift, and go to state 213


State 162

  125 variable: ident arr_dim .
  140 arr_dim: arr_dim . '[' expr ']'

    '['  shift, and go to state 193

    $default  reduce using rule 125 (variable)


State 163

   91 expr: expr '=' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 214
    literal   go to state 109
    variable  go to state 110


State 164

   76 expr: expr '+' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 215
    literal   go to state 109
    variable  go to state 110


State 165

   77 expr: expr '-' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 216
    literal   go to state 109
    variable  go to state 110


State 166

   78 expr: expr '*' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 217
    literal   go to state 109
    variable  go to state 110


State 167

   79 expr: expr '/' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 218
    literal   go to state 109
    variable  go to state 110


State 168

   80 expr: expr '%' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 219
    literal   go to state 109
    variable  go to state 110


State 169

   85 expr: expr '<' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 220
    literal   go to state 109
    variable  go to state 110


State 170

   87 expr: expr '>' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 221
    literal   go to state 109
    variable  go to state 110


State 171

   97 expr: expr '&' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 222
    literal   go to state 109
    variable  go to state 110


State 172

   98 expr: expr '|' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 223
    literal   go to state 109
    variable  go to state 110


State 173

   96 expr: expr '^' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 224
    literal   go to state 109
    variable  go to state 110


State 174

   81 expr: expr INC .

    $default  reduce using rule 81 (expr)


State 175

   82 expr: expr DEC .

    $default  reduce using rule 82 (expr)


State 176

   86 expr: expr LEQ . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 225
    literal   go to state 109
    variable  go to state 110


State 177

   88 expr: expr GEQ . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 226
    literal   go to state 109
    variable  go to state 110


State 178

   89 expr: expr EQL . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 227
    literal   go to state 109
    variable  go to state 110


State 179

   90 expr: expr NEQ . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 228
    literal   go to state 109
    variable  go to state 110


State 180

   92 expr: expr LAND . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 229
    literal   go to state 109
    variable  go to state 110


State 181

   93 expr: expr LOR . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 230
    literal   go to state 109
    variable  go to state 110


State 182

  148 stmt: expr ';' .

    $default  reduce using rule 148 (stmt)


State 183

   99 expr: expr LSHIFT . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 231
    literal   go to state 109
    variable  go to state 110


State 184

  100 expr: expr RSHIFT . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 232
    literal   go to state 109
    variable  go to state 110


State 185

   10 func_def: func '{' stmt '}' .

    $default  reduce using rule 10 (func_def)


State 186

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  126 exprs: expr .

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 126 (exprs)


State 187

   75 init_ident: ID '=' exprs .
  127 exprs: exprs . ',' expr

    $default  reduce using rule 75 (init_ident)


State 188

  129 scalar_decl: type '*' idents ';' .

    $default  reduce using rule 129 (scalar_decl)


State 189

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  139 arr_dim: '[' expr . ']'

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ']'     shift, and go to state 234
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 190

  144 parameters: type . ident
  145           | type . '*' ident

    ID   shift, and go to state 84
    '*'  shift, and go to state 235

    ident  go to state 236


State 191

   11 func: type ident '(' parameters . ')'
  146 parameters: parameters . ',' parameters

    ','  shift, and go to state 237
    ')'  shift, and go to state 238


State 192

  138 array: ident arr_dim '=' . arr_content

    '{'  shift, and go to state 239

    arr_content  go to state 240


State 193

  140 arr_dim: arr_dim '[' . expr ']'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 241
    literal   go to state 109
    variable  go to state 110


State 194

  130 idents: idents ',' ident .

    $default  reduce using rule 130 (idents)


State 195

  131 idents: idents ',' init_ident .

    $default  reduce using rule 131 (idents)


State 196

  137 array: ident . arr_dim
  138      | ident . arr_dim '=' arr_content

    '['  shift, and go to state 117

    arr_dim  go to state 119


State 197

  135 arrays: array ',' arrays .

    $default  reduce using rule 135 (arrays)


State 198

  101 expr: '[' expr ']' .

    $default  reduce using rule 101 (expr)


State 199

  102 expr: '(' expr ')' .

    $default  reduce using rule 102 (expr)


State 200

  132 idents: ident .
  137 array: ident . arr_dim
  138      | ident . arr_dim '=' arr_content

    '['  shift, and go to state 117

    $default  reduce using rule 132 (idents)

    arr_dim  go to state 119


State 201

  173 compound_stmt: '{' stmt_or_decls '}' .

    $default  reduce using rule 173 (compound_stmt)


State 202

  174 stmt_or_decls: stmt_or_decl stmt_or_decls .

    $default  reduce using rule 174 (stmt_or_decls)


State 203

  155 stmt: RETURN expr ';' .

    $default  reduce using rule 155 (stmt)


State 204

  167 for_stmt: FOR '(' ';' . exprs ';' exprs ')' stmt
  168         | FOR '(' ';' . ';' exprs ')' stmt
  169         | FOR '(' ';' . exprs ';' ')' stmt
  171         | FOR '(' ';' . ';' ')' stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    ';'            shift, and go to state 242
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 186
    literal   go to state 109
    variable  go to state 110
    exprs     go to state 243


State 205

  127 exprs: exprs . ',' expr
  164 for_stmt: FOR '(' exprs . ';' exprs ';' exprs ')' stmt
  165         | FOR '(' exprs . ';' exprs ';' ')' stmt
  166         | FOR '(' exprs . ';' ';' exprs ')' stmt
  170         | FOR '(' exprs . ';' ';' ')' stmt

    ';'  shift, and go to state 244
    ','  shift, and go to state 233


State 206

  153 stmt: DO stmt WHILE . '(' expr ')' ';'

    '('  shift, and go to state 245


State 207

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  152 stmt: WHILE '(' expr . ')' stmt

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ')'     shift, and go to state 246
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 208

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  149 stmt: IF '(' expr . ')' compound_stmt
  150     | IF '(' expr . ')' compound_stmt ELSE compound_stmt

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ')'     shift, and go to state 247
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 209

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  151 stmt: SWITCH '(' expr . ')' '{' switch_clauses '}'

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ')'     shift, and go to state 248
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 210

  119 char: ESCAPE_START ESCAPE_CHAR .

    $default  reduce using rule 119 (char)


State 211

  116 literal: CHAR_START char CHAR_END .

    $default  reduce using rule 116 (literal)


State 212

  122 string: STR ESCAPE_START . ESCAPE_CHAR STR

    ESCAPE_CHAR  shift, and go to state 249


State 213

  117 literal: STRING_START string STRING_END .

    $default  reduce using rule 117 (literal)


State 214

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   91     | expr '=' expr .
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 91 (expr)


State 215

   76 expr: expr . '+' expr
   76     | expr '+' expr .
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '*'  shift, and go to state 166
    '/'  shift, and go to state 167
    '%'  shift, and go to state 168
    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 76 (expr)


State 216

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   77     | expr '-' expr .
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '*'  shift, and go to state 166
    '/'  shift, and go to state 167
    '%'  shift, and go to state 168
    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 77 (expr)


State 217

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   78     | expr '*' expr .
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 78 (expr)


State 218

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   79     | expr '/' expr .
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 79 (expr)


State 219

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   80     | expr '%' expr .
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 80 (expr)


State 220

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   85     | expr '<' expr .
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 85 (expr)


State 221

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   87     | expr '>' expr .
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 87 (expr)


State 222

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   97     | expr '&' expr .
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 97 (expr)


State 223

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   98     | expr '|' expr .
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 98 (expr)


State 224

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   96     | expr '^' expr .
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 96 (expr)


State 225

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   86     | expr LEQ expr .
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 86 (expr)


State 226

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   88     | expr GEQ expr .
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 88 (expr)


State 227

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   89     | expr EQL expr .
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 89 (expr)


State 228

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   90     | expr NEQ expr .
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 90 (expr)


State 229

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   92     | expr LAND expr .
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 92 (expr)


State 230

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   93     | expr LOR expr .
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr

    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 93 (expr)


State 231

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
   99     | expr LSHIFT expr .
  100     | expr . RSHIFT expr

    '+'  shift, and go to state 164
    '-'  shift, and go to state 165
    '*'  shift, and go to state 166
    '/'  shift, and go to state 167
    '%'  shift, and go to state 168
    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 99 (expr)


State 232

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  100     | expr RSHIFT expr .

    '+'  shift, and go to state 164
    '-'  shift, and go to state 165
    '*'  shift, and go to state 166
    '/'  shift, and go to state 167
    '%'  shift, and go to state 168
    INC  shift, and go to state 174
    DEC  shift, and go to state 175

    $default  reduce using rule 100 (expr)


State 233

  127 exprs: exprs ',' . expr

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 250
    literal   go to state 109
    variable  go to state 110


State 234

  139 arr_dim: '[' expr ']' .

    $default  reduce using rule 139 (arr_dim)


State 235

  145 parameters: type '*' . ident

    ID  shift, and go to state 84

    ident  go to state 251


State 236

  144 parameters: type ident .

    $default  reduce using rule 144 (parameters)


State 237

  146 parameters: parameters ',' . parameters

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 147 (parameters)

    type        go to state 190
    int_type    go to state 20
    char_type   go to state 21
    other_type  go to state 22
    parameters  go to state 252


State 238

   11 func: type ident '(' parameters ')' .

    $default  reduce using rule 11 (func)


State 239

  141 arr_content: '{' . exprs '}'
  142            | '{' . arr_content '}'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 239
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident        go to state 107
    expr         go to state 186
    literal      go to state 109
    variable     go to state 110
    exprs        go to state 253
    arr_content  go to state 254


State 240

  138 array: ident arr_dim '=' arr_content .
  143 arr_content: arr_content . ',' arr_content

    $default  reduce using rule 138 (array)


State 241

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  140 arr_dim: arr_dim '[' expr . ']'

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ']'     shift, and go to state 256
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 242

  168 for_stmt: FOR '(' ';' ';' . exprs ')' stmt
  171         | FOR '(' ';' ';' . ')' stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    ')'            shift, and go to state 257
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 186
    literal   go to state 109
    variable  go to state 110
    exprs     go to state 258


State 243

  127 exprs: exprs . ',' expr
  167 for_stmt: FOR '(' ';' exprs . ';' exprs ')' stmt
  169         | FOR '(' ';' exprs . ';' ')' stmt

    ';'  shift, and go to state 259
    ','  shift, and go to state 233


State 244

  164 for_stmt: FOR '(' exprs ';' . exprs ';' exprs ')' stmt
  165         | FOR '(' exprs ';' . exprs ';' ')' stmt
  166         | FOR '(' exprs ';' . ';' exprs ')' stmt
  170         | FOR '(' exprs ';' . ';' ')' stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    ';'            shift, and go to state 260
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 186
    literal   go to state 109
    variable  go to state 110
    exprs     go to state 261


State 245

  153 stmt: DO stmt WHILE '(' . expr ')' ';'

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 262
    literal   go to state 109
    variable  go to state 110


State 246

  152 stmt: WHILE '(' expr ')' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 263
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 247

  149 stmt: IF '(' expr ')' . compound_stmt
  150     | IF '(' expr ')' . compound_stmt ELSE compound_stmt

    '{'  shift, and go to state 95

    compound_stmt  go to state 264


State 248

  151 stmt: SWITCH '(' expr ')' . '{' switch_clauses '}'

    '{'  shift, and go to state 265


State 249

  122 string: STR ESCAPE_START ESCAPE_CHAR . STR

    STR  shift, and go to state 266


State 250

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  127 exprs: exprs ',' expr .

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184

    $default  reduce using rule 127 (exprs)


State 251

  145 parameters: type '*' ident .

    $default  reduce using rule 145 (parameters)


State 252

  146 parameters: parameters . ',' parameters
  146           | parameters ',' parameters .

    $default  reduce using rule 146 (parameters)


State 253

  127 exprs: exprs . ',' expr
  141 arr_content: '{' exprs . '}'

    ','  shift, and go to state 233
    '}'  shift, and go to state 267


State 254

  142 arr_content: '{' arr_content . '}'
  143            | arr_content . ',' arr_content

    ','  shift, and go to state 255
    '}'  shift, and go to state 268


State 255

  143 arr_content: arr_content ',' . arr_content

    '{'  shift, and go to state 239

    arr_content  go to state 269


State 256

  140 arr_dim: arr_dim '[' expr ']' .

    $default  reduce using rule 140 (arr_dim)


State 257

  171 for_stmt: FOR '(' ';' ';' ')' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 270
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 258

  127 exprs: exprs . ',' expr
  168 for_stmt: FOR '(' ';' ';' exprs . ')' stmt

    ','  shift, and go to state 233
    ')'  shift, and go to state 271


State 259

  167 for_stmt: FOR '(' ';' exprs ';' . exprs ')' stmt
  169         | FOR '(' ';' exprs ';' . ')' stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    ')'            shift, and go to state 272
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 186
    literal   go to state 109
    variable  go to state 110
    exprs     go to state 273


State 260

  166 for_stmt: FOR '(' exprs ';' ';' . exprs ')' stmt
  170         | FOR '(' exprs ';' ';' . ')' stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    ')'            shift, and go to state 274
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 186
    literal   go to state 109
    variable  go to state 110
    exprs     go to state 275


State 261

  127 exprs: exprs . ',' expr
  164 for_stmt: FOR '(' exprs ';' exprs . ';' exprs ')' stmt
  165         | FOR '(' exprs ';' exprs . ';' ')' stmt

    ';'  shift, and go to state 276
    ','  shift, and go to state 233


State 262

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  153 stmt: DO stmt WHILE '(' expr . ')' ';'

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ')'     shift, and go to state 277
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 263

  152 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 152 (stmt)


State 264

  149 stmt: IF '(' expr ')' compound_stmt .
  150     | IF '(' expr ')' compound_stmt . ELSE compound_stmt

    ELSE  shift, and go to state 278

    $default  reduce using rule 149 (stmt)


State 265

  151 stmt: SWITCH '(' expr ')' '{' . switch_clauses '}'

    CASE     shift, and go to state 279
    DEFAULT  shift, and go to state 280

    $default  reduce using rule 161 (switch_clauses)

    switch_clauses  go to state 281
    switch_clause   go to state 282


State 266

  122 string: STR ESCAPE_START ESCAPE_CHAR STR .

    $default  reduce using rule 122 (string)


State 267

  141 arr_content: '{' exprs '}' .

    $default  reduce using rule 141 (arr_content)


State 268

  142 arr_content: '{' arr_content '}' .

    $default  reduce using rule 142 (arr_content)


State 269

  143 arr_content: arr_content . ',' arr_content
  143            | arr_content ',' arr_content .

    $default  reduce using rule 143 (arr_content)


State 270

  171 for_stmt: FOR '(' ';' ';' ')' stmt .

    $default  reduce using rule 171 (for_stmt)


State 271

  168 for_stmt: FOR '(' ';' ';' exprs ')' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 283
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 272

  169 for_stmt: FOR '(' ';' exprs ';' ')' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 284
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 273

  127 exprs: exprs . ',' expr
  167 for_stmt: FOR '(' ';' exprs ';' exprs . ')' stmt

    ','  shift, and go to state 233
    ')'  shift, and go to state 285


State 274

  170 for_stmt: FOR '(' exprs ';' ';' ')' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 286
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 275

  127 exprs: exprs . ',' expr
  166 for_stmt: FOR '(' exprs ';' ';' exprs . ')' stmt

    ','  shift, and go to state 233
    ')'  shift, and go to state 287


State 276

  164 for_stmt: FOR '(' exprs ';' exprs ';' . exprs ')' stmt
  165         | FOR '(' exprs ';' exprs ';' . ')' stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    ')'            shift, and go to state 288
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 186
    literal   go to state 109
    variable  go to state 110
    exprs     go to state 289


State 277

  153 stmt: DO stmt WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 290


State 278

  150 stmt: IF '(' expr ')' compound_stmt ELSE . compound_stmt

    '{'  shift, and go to state 95

    compound_stmt  go to state 291


State 279

  162 switch_clause: CASE . expr ':' stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    NUL            shift, and go to state 97
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident     go to state 107
    expr      go to state 292
    literal   go to state 109
    variable  go to state 110


State 280

  163 switch_clause: DEFAULT . ':' stmt

    ':'  shift, and go to state 293


State 281

  151 stmt: SWITCH '(' expr ')' '{' switch_clauses . '}'

    '}'  shift, and go to state 294


State 282

  160 switch_clauses: switch_clause . switch_clauses

    CASE     shift, and go to state 279
    DEFAULT  shift, and go to state 280

    $default  reduce using rule 161 (switch_clauses)

    switch_clauses  go to state 295
    switch_clause   go to state 282


State 283

  168 for_stmt: FOR '(' ';' ';' exprs ')' stmt .

    $default  reduce using rule 168 (for_stmt)


State 284

  169 for_stmt: FOR '(' ';' exprs ';' ')' stmt .

    $default  reduce using rule 169 (for_stmt)


State 285

  167 for_stmt: FOR '(' ';' exprs ';' exprs ')' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 296
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 286

  170 for_stmt: FOR '(' exprs ';' ';' ')' stmt .

    $default  reduce using rule 170 (for_stmt)


State 287

  166 for_stmt: FOR '(' exprs ';' ';' exprs ')' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 297
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 288

  165 for_stmt: FOR '(' exprs ';' exprs ';' ')' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 298
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 289

  127 exprs: exprs . ',' expr
  164 for_stmt: FOR '(' exprs ';' exprs ';' exprs . ')' stmt

    ','  shift, and go to state 233
    ')'  shift, and go to state 299


State 290

  153 stmt: DO stmt WHILE '(' expr ')' ';' .

    $default  reduce using rule 153 (stmt)


State 291

  150 stmt: IF '(' expr ')' compound_stmt ELSE compound_stmt .

    $default  reduce using rule 150 (stmt)


State 292

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . '*' expr
   79     | expr . '/' expr
   80     | expr . '%' expr
   81     | expr . INC
   82     | expr . DEC
   85     | expr . '<' expr
   86     | expr . LEQ expr
   87     | expr . '>' expr
   88     | expr . GEQ expr
   89     | expr . EQL expr
   90     | expr . NEQ expr
   91     | expr . '=' expr
   92     | expr . LAND expr
   93     | expr . LOR expr
   96     | expr . '^' expr
   97     | expr . '&' expr
   98     | expr . '|' expr
   99     | expr . LSHIFT expr
  100     | expr . RSHIFT expr
  162 switch_clause: CASE expr . ':' stmt

    '='     shift, and go to state 163
    '+'     shift, and go to state 164
    '-'     shift, and go to state 165
    '*'     shift, and go to state 166
    '/'     shift, and go to state 167
    '%'     shift, and go to state 168
    '<'     shift, and go to state 169
    '>'     shift, and go to state 170
    '&'     shift, and go to state 171
    '|'     shift, and go to state 172
    '^'     shift, and go to state 173
    INC     shift, and go to state 174
    DEC     shift, and go to state 175
    LEQ     shift, and go to state 176
    GEQ     shift, and go to state 177
    EQL     shift, and go to state 178
    NEQ     shift, and go to state 179
    LAND    shift, and go to state 180
    LOR     shift, and go to state 181
    ':'     shift, and go to state 300
    LSHIFT  shift, and go to state 183
    RSHIFT  shift, and go to state 184


State 293

  163 switch_clause: DEFAULT ':' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 301
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 294

  151 stmt: SWITCH '(' expr ')' '{' switch_clauses '}' .

    $default  reduce using rule 151 (stmt)


State 295

  160 switch_clauses: switch_clause switch_clauses .

    $default  reduce using rule 160 (switch_clauses)


State 296

  167 for_stmt: FOR '(' ';' exprs ';' exprs ')' stmt .

    $default  reduce using rule 167 (for_stmt)


State 297

  166 for_stmt: FOR '(' exprs ';' ';' exprs ')' stmt .

    $default  reduce using rule 166 (for_stmt)


State 298

  165 for_stmt: FOR '(' exprs ';' exprs ';' ')' stmt .

    $default  reduce using rule 165 (for_stmt)


State 299

  164 for_stmt: FOR '(' exprs ';' exprs ';' exprs ')' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 302
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 300

  162 switch_clause: CASE expr ':' . stmt

    INT_NUM        shift, and go to state 78
    POS_INT_NUM    shift, and go to state 79
    NEG_INT_NUM    shift, and go to state 80
    FLOAT_NUM      shift, and go to state 81
    POS_FLOAT_NUM  shift, and go to state 82
    NEG_FLOAT_NUM  shift, and go to state 83
    ID             shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '!'            shift, and go to state 88
    '~'            shift, and go to state 89
    '&'            shift, and go to state 90
    INC            shift, and go to state 91
    DEC            shift, and go to state 92
    '['            shift, and go to state 93
    '('            shift, and go to state 94
    '{'            shift, and go to state 95
    RETURN         shift, and go to state 96
    NUL            shift, and go to state 97
    FOR            shift, and go to state 98
    DO             shift, and go to state 99
    WHILE          shift, and go to state 100
    BREAK          shift, and go to state 101
    CONTINUE       shift, and go to state 102
    IF             shift, and go to state 103
    SWITCH         shift, and go to state 104
    CHAR_START     shift, and go to state 105
    STRING_START   shift, and go to state 106

    ident          go to state 107
    expr           go to state 108
    literal        go to state 109
    variable       go to state 110
    stmt           go to state 303
    for_stmt       go to state 112
    compound_stmt  go to state 113


State 301

  163 switch_clause: DEFAULT ':' stmt .

    $default  reduce using rule 163 (switch_clause)


State 302

  164 for_stmt: FOR '(' exprs ';' exprs ';' exprs ')' stmt .

    $default  reduce using rule 164 (for_stmt)


State 303

  162 switch_clause: CASE expr ':' stmt .

    $default  reduce using rule 162 (switch_clause)
