Terminals unused in grammar

   ':'
   '.'
   STRUCT
   RETURN
   FOR
   DO
   WHILE
   BREAK
   CONTINUE
   IF
   ELSE
   SWITCH
   CASE
   DEFAULT


Grammar

    0 $accept: program $end

    1 program: program_ingredients

    2 program_ingredients: program_ingredients program_ingredient
    3                    | program_ingredient

    4 program_ingredient: global_variable_decl
    5                   | func_decl
    6                   | func_def

    7 global_variable_decl: scalar_decl
    8                     | array_decl

    9 func_decl: func ';'

   10 func_def: func '{' '}'

   11 func: type ident '(' parameters ')'

   12 type: int_type
   13     | char_type
   14     | other_type
   15     | CONST

   16 int_type: CONST SIGNED LONGLONG INT
   17         | CONST SIGNED LONG INT
   18         | CONST SIGNED SHORT INT
   19         | CONST SIGNED INT
   20         | CONST UNSIGNED LONGLONG INT
   21         | CONST UNSIGNED LONG INT
   22         | CONST UNSIGNED SHORT INT
   23         | CONST UNSIGNED INT
   24         | CONST LONGLONG INT
   25         | CONST LONG INT
   26         | CONST SHORT INT
   27         | CONST INT
   28         | SIGNED LONGLONG INT
   29         | SIGNED LONG INT
   30         | SIGNED SHORT INT
   31         | SIGNED INT
   32         | UNSIGNED LONGLONG INT
   33         | UNSIGNED LONG INT
   34         | UNSIGNED SHORT INT
   35         | UNSIGNED INT
   36         | LONGLONG INT
   37         | LONG INT
   38         | SHORT INT
   39         | INT

   40 char_type: CONST SIGNED LONGLONG
   41          | CONST SIGNED LONG
   42          | CONST SIGNED SHORT
   43          | CONST SIGNED CHAR
   44          | CONST UNSIGNED LONGLONG
   45          | CONST UNSIGNED LONG
   46          | CONST UNSIGNED SHORT
   47          | CONST UNSIGNED CHAR
   48          | CONST LONGLONG
   49          | CONST LONG
   50          | CONST SHORT
   51          | CONST CHAR
   52          | SIGNED LONGLONG
   53          | SIGNED LONG
   54          | SIGNED SHORT
   55          | SIGNED CHAR
   56          | UNSIGNED LONGLONG
   57          | UNSIGNED LONG
   58          | UNSIGNED SHORT
   59          | UNSIGNED CHAR
   60          | LONGLONG
   61          | LONG
   62          | SHORT
   63          | CHAR

   64 other_type: CONST SIGNED
   65           | CONST UNSIGNED
   66           | CONST FLOAT
   67           | CONST DOUBLE
   68           | CONST VOID
   69           | SIGNED
   70           | UNSIGNED
   71           | FLOAT
   72           | DOUBLE
   73           | VOID

   74 ident: ID

   75 expr: expr '+' expr
   76     | expr '-' expr
   77     | expr '*' expr
   78     | expr '/' expr
   79     | expr '%' expr
   80     | expr INC
   81     | expr DEC
   82     | INC expr
   83     | DEC expr
   84     | expr '<' expr
   85     | expr LEQ expr
   86     | expr '>' expr
   87     | expr GEQ expr
   88     | expr EQL expr
   89     | expr NEQ expr
   90     | expr '=' expr
   91     | expr LAND expr
   92     | expr LOR expr
   93     | '!' expr
   94     | '~' expr
   95     | expr '^' expr
   96     | expr '&' expr
   97     | expr '|' expr
   98     | expr LSHIFT expr
   99     | expr RSHIFT expr
  100     | '[' expr ']'
  101     | '(' expr ')'
  102     | '-' expr
  103     | '+' expr
  104     | '*' expr
  105     | '&' expr
  106     | literal
  107     | variable
  108     | NUL

  109 literal: INT_NUM
  110        | POS_INT_NUM
  111        | NEG_INT_NUM
  112        | FLOAT_NUM
  113        | POS_FLOAT_NUM
  114        | NEG_FLOAT_NUM
  115        | CHAR_START char CHAR_END
  116        | STRING_START string STRING_END

  117 char: CHAR
  118     | ESCAPE_START ESCAPE_CHAR
  119     | %empty

  120 string: STR
  121       | STR ESCAPE_START ESCAPE_CHAR STR
  122       | %empty

  123 variable: ident
  124         | ident arr_dim

  125 exprs: expr
  126      | expr ',' exprs

  127 scalar_decl: type idents ';'
  128            | type '*' idents ';'

  129 idents: ident ',' idents
  130       | ident '=' expr
  131       | ident

  132 array_decl: type arrays ';'

  133 arrays: array ',' arrays
  134       | array

  135 array: ident arr_dim
  136      | ident arr_dim '=' arr_content

  137 arr_dim: '[' expr ']'
  138        | arr_dim '[' expr ']'

  139 arr_content: '{' exprs '}'
  140            | '{' arr_content '}'
  141            | arr_content ',' arr_content

  142 parameters: type ident
  143           | type '*' ident
  144           | parameters ',' parameters
  145           | %empty


Terminals, with rules where they appear

$end (0) 0
'!' (33) 93
'%' (37) 79
'&' (38) 96 105
'(' (40) 11 101
')' (41) 11 101
'*' (42) 77 104 128 143
'+' (43) 75 103
',' (44) 126 129 133 141 144
'-' (45) 76 102
'.' (46)
'/' (47) 78
':' (58)
';' (59) 9 127 128 132
'<' (60) 84
'=' (61) 90 130 136
'>' (62) 86
'[' (91) 100 137 138
']' (93) 100 137 138
'^' (94) 95
'{' (123) 10 139 140
'|' (124) 97
'}' (125) 10 139 140
'~' (126) 94
error (256)
INT_NUM (258) 109
POS_INT_NUM (259) 110
NEG_INT_NUM (260) 111
FLOAT_NUM (261) 112
POS_FLOAT_NUM (262) 113
NEG_FLOAT_NUM (263) 114
ID (264) 74
INC (265) 80 82
DEC (266) 81 83
LEQ (267) 85
GEQ (268) 87
EQL (269) 88
NEQ (270) 89
LAND (271) 91
LOR (272) 92
CONST (273) 15 16 17 18 19 20 21 22 23 24 25 26 27 40 41 42 43 44 45
    46 47 48 49 50 51 64 65 66 67 68
SIGNED (274) 16 17 18 19 28 29 30 31 40 41 42 43 52 53 54 55 64 69
UNSIGNED (275) 20 21 22 23 32 33 34 35 44 45 46 47 56 57 58 59 65 70
SHORT (276) 18 22 26 30 34 38 42 46 50 54 58 62
LONG (277) 17 21 25 29 33 37 41 45 49 53 57 61
LONGLONG (278) 16 20 24 28 32 36 40 44 48 52 56 60
INT (279) 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39
CHAR (280) 43 47 51 55 59 63 117
DOUBLE (281) 67 72
VOID (282) 68 73
FLOAT (283) 66 71
STRUCT (284)
RETURN (285)
LSHIFT (286) 98
RSHIFT (287) 99
STR (288) 120 121
NUL (289) 108
FOR (290)
DO (291)
WHILE (292)
BREAK (293)
CONTINUE (294)
IF (295)
ELSE (296)
SWITCH (297)
CASE (298)
DEFAULT (299)
CHAR_START (300) 115
CHAR_END (301) 115
ESCAPE_START (302) 118 121
ESCAPE_CHAR (303) 118 121
STRING_START (304) 116
STRING_END (305) 116
UMINUS (306)
UPLUS (307)
DEREF (308)
ADDR (309)


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
program (79)
    on left: 1, on right: 0
program_ingredients (80)
    on left: 2 3, on right: 1 2
program_ingredient (81)
    on left: 4 5 6, on right: 2 3
global_variable_decl (82)
    on left: 7 8, on right: 4
func_decl (83)
    on left: 9, on right: 5
func_def (84)
    on left: 10, on right: 6
func (85)
    on left: 11, on right: 9 10
type (86)
    on left: 12 13 14 15, on right: 11 127 128 132 142 143
int_type (87)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34 35 36 37 38 39, on right: 12
char_type (88)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 60 61 62 63, on right: 13
other_type (89)
    on left: 64 65 66 67 68 69 70 71 72 73, on right: 14
ident (90)
    on left: 74, on right: 11 123 124 129 130 131 135 136 142 143
expr (91)
    on left: 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
    93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108, on right:
    75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    96 97 98 99 100 101 102 103 104 105 125 126 130 137 138
literal (92)
    on left: 109 110 111 112 113 114 115 116, on right: 106
char (93)
    on left: 117 118 119, on right: 115
string (94)
    on left: 120 121 122, on right: 116
variable (95)
    on left: 123 124, on right: 107
exprs (96)
    on left: 125 126, on right: 126 139
scalar_decl (97)
    on left: 127 128, on right: 7
idents (98)
    on left: 129 130 131, on right: 127 128 129
array_decl (99)
    on left: 132, on right: 8
arrays (100)
    on left: 133 134, on right: 132 133
array (101)
    on left: 135 136, on right: 133 134
arr_dim (102)
    on left: 137 138, on right: 124 135 136 138
arr_content (103)
    on left: 139 140 141, on right: 136 140 141
parameters (104)
    on left: 142 143 144 145, on right: 11 144


State 0

    0 $accept: . program $end

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    program               go to state 12
    program_ingredients   go to state 13
    program_ingredient    go to state 14
    global_variable_decl  go to state 15
    func_decl             go to state 16
    func_def              go to state 17
    func                  go to state 18
    type                  go to state 19
    int_type              go to state 20
    char_type             go to state 21
    other_type            go to state 22
    scalar_decl           go to state 23
    array_decl            go to state 24


State 1

   15 type: CONST .
   16 int_type: CONST . SIGNED LONGLONG INT
   17         | CONST . SIGNED LONG INT
   18         | CONST . SIGNED SHORT INT
   19         | CONST . SIGNED INT
   20         | CONST . UNSIGNED LONGLONG INT
   21         | CONST . UNSIGNED LONG INT
   22         | CONST . UNSIGNED SHORT INT
   23         | CONST . UNSIGNED INT
   24         | CONST . LONGLONG INT
   25         | CONST . LONG INT
   26         | CONST . SHORT INT
   27         | CONST . INT
   40 char_type: CONST . SIGNED LONGLONG
   41          | CONST . SIGNED LONG
   42          | CONST . SIGNED SHORT
   43          | CONST . SIGNED CHAR
   44          | CONST . UNSIGNED LONGLONG
   45          | CONST . UNSIGNED LONG
   46          | CONST . UNSIGNED SHORT
   47          | CONST . UNSIGNED CHAR
   48          | CONST . LONGLONG
   49          | CONST . LONG
   50          | CONST . SHORT
   51          | CONST . CHAR
   64 other_type: CONST . SIGNED
   65           | CONST . UNSIGNED
   66           | CONST . FLOAT
   67           | CONST . DOUBLE
   68           | CONST . VOID

    SIGNED    shift, and go to state 25
    UNSIGNED  shift, and go to state 26
    SHORT     shift, and go to state 27
    LONG      shift, and go to state 28
    LONGLONG  shift, and go to state 29
    INT       shift, and go to state 30
    CHAR      shift, and go to state 31
    DOUBLE    shift, and go to state 32
    VOID      shift, and go to state 33
    FLOAT     shift, and go to state 34

    $default  reduce using rule 15 (type)


State 2

   28 int_type: SIGNED . LONGLONG INT
   29         | SIGNED . LONG INT
   30         | SIGNED . SHORT INT
   31         | SIGNED . INT
   52 char_type: SIGNED . LONGLONG
   53          | SIGNED . LONG
   54          | SIGNED . SHORT
   55          | SIGNED . CHAR
   69 other_type: SIGNED .

    SHORT     shift, and go to state 35
    LONG      shift, and go to state 36
    LONGLONG  shift, and go to state 37
    INT       shift, and go to state 38
    CHAR      shift, and go to state 39

    $default  reduce using rule 69 (other_type)


State 3

   32 int_type: UNSIGNED . LONGLONG INT
   33         | UNSIGNED . LONG INT
   34         | UNSIGNED . SHORT INT
   35         | UNSIGNED . INT
   56 char_type: UNSIGNED . LONGLONG
   57          | UNSIGNED . LONG
   58          | UNSIGNED . SHORT
   59          | UNSIGNED . CHAR
   70 other_type: UNSIGNED .

    SHORT     shift, and go to state 40
    LONG      shift, and go to state 41
    LONGLONG  shift, and go to state 42
    INT       shift, and go to state 43
    CHAR      shift, and go to state 44

    $default  reduce using rule 70 (other_type)


State 4

   38 int_type: SHORT . INT
   62 char_type: SHORT .

    INT  shift, and go to state 45

    $default  reduce using rule 62 (char_type)


State 5

   37 int_type: LONG . INT
   61 char_type: LONG .

    INT  shift, and go to state 46

    $default  reduce using rule 61 (char_type)


State 6

   36 int_type: LONGLONG . INT
   60 char_type: LONGLONG .

    INT  shift, and go to state 47

    $default  reduce using rule 60 (char_type)


State 7

   39 int_type: INT .

    $default  reduce using rule 39 (int_type)


State 8

   63 char_type: CHAR .

    $default  reduce using rule 63 (char_type)


State 9

   72 other_type: DOUBLE .

    $default  reduce using rule 72 (other_type)


State 10

   73 other_type: VOID .

    $default  reduce using rule 73 (other_type)


State 11

   71 other_type: FLOAT .

    $default  reduce using rule 71 (other_type)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 48


State 13

    1 program: program_ingredients .
    2 program_ingredients: program_ingredients . program_ingredient

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 1 (program)

    program_ingredient    go to state 49
    global_variable_decl  go to state 15
    func_decl             go to state 16
    func_def              go to state 17
    func                  go to state 18
    type                  go to state 19
    int_type              go to state 20
    char_type             go to state 21
    other_type            go to state 22
    scalar_decl           go to state 23
    array_decl            go to state 24


State 14

    3 program_ingredients: program_ingredient .

    $default  reduce using rule 3 (program_ingredients)


State 15

    4 program_ingredient: global_variable_decl .

    $default  reduce using rule 4 (program_ingredient)


State 16

    5 program_ingredient: func_decl .

    $default  reduce using rule 5 (program_ingredient)


State 17

    6 program_ingredient: func_def .

    $default  reduce using rule 6 (program_ingredient)


State 18

    9 func_decl: func . ';'
   10 func_def: func . '{' '}'

    ';'  shift, and go to state 50
    '{'  shift, and go to state 51


State 19

   11 func: type . ident '(' parameters ')'
  127 scalar_decl: type . idents ';'
  128            | type . '*' idents ';'
  132 array_decl: type . arrays ';'

    ID   shift, and go to state 52
    '*'  shift, and go to state 53

    ident   go to state 54
    idents  go to state 55
    arrays  go to state 56
    array   go to state 57


State 20

   12 type: int_type .

    $default  reduce using rule 12 (type)


State 21

   13 type: char_type .

    $default  reduce using rule 13 (type)


State 22

   14 type: other_type .

    $default  reduce using rule 14 (type)


State 23

    7 global_variable_decl: scalar_decl .

    $default  reduce using rule 7 (global_variable_decl)


State 24

    8 global_variable_decl: array_decl .

    $default  reduce using rule 8 (global_variable_decl)


State 25

   16 int_type: CONST SIGNED . LONGLONG INT
   17         | CONST SIGNED . LONG INT
   18         | CONST SIGNED . SHORT INT
   19         | CONST SIGNED . INT
   40 char_type: CONST SIGNED . LONGLONG
   41          | CONST SIGNED . LONG
   42          | CONST SIGNED . SHORT
   43          | CONST SIGNED . CHAR
   64 other_type: CONST SIGNED .

    SHORT     shift, and go to state 58
    LONG      shift, and go to state 59
    LONGLONG  shift, and go to state 60
    INT       shift, and go to state 61
    CHAR      shift, and go to state 62

    $default  reduce using rule 64 (other_type)


State 26

   20 int_type: CONST UNSIGNED . LONGLONG INT
   21         | CONST UNSIGNED . LONG INT
   22         | CONST UNSIGNED . SHORT INT
   23         | CONST UNSIGNED . INT
   44 char_type: CONST UNSIGNED . LONGLONG
   45          | CONST UNSIGNED . LONG
   46          | CONST UNSIGNED . SHORT
   47          | CONST UNSIGNED . CHAR
   65 other_type: CONST UNSIGNED .

    SHORT     shift, and go to state 63
    LONG      shift, and go to state 64
    LONGLONG  shift, and go to state 65
    INT       shift, and go to state 66
    CHAR      shift, and go to state 67

    $default  reduce using rule 65 (other_type)


State 27

   26 int_type: CONST SHORT . INT
   50 char_type: CONST SHORT .

    INT  shift, and go to state 68

    $default  reduce using rule 50 (char_type)


State 28

   25 int_type: CONST LONG . INT
   49 char_type: CONST LONG .

    INT  shift, and go to state 69

    $default  reduce using rule 49 (char_type)


State 29

   24 int_type: CONST LONGLONG . INT
   48 char_type: CONST LONGLONG .

    INT  shift, and go to state 70

    $default  reduce using rule 48 (char_type)


State 30

   27 int_type: CONST INT .

    $default  reduce using rule 27 (int_type)


State 31

   51 char_type: CONST CHAR .

    $default  reduce using rule 51 (char_type)


State 32

   67 other_type: CONST DOUBLE .

    $default  reduce using rule 67 (other_type)


State 33

   68 other_type: CONST VOID .

    $default  reduce using rule 68 (other_type)


State 34

   66 other_type: CONST FLOAT .

    $default  reduce using rule 66 (other_type)


State 35

   30 int_type: SIGNED SHORT . INT
   54 char_type: SIGNED SHORT .

    INT  shift, and go to state 71

    $default  reduce using rule 54 (char_type)


State 36

   29 int_type: SIGNED LONG . INT
   53 char_type: SIGNED LONG .

    INT  shift, and go to state 72

    $default  reduce using rule 53 (char_type)


State 37

   28 int_type: SIGNED LONGLONG . INT
   52 char_type: SIGNED LONGLONG .

    INT  shift, and go to state 73

    $default  reduce using rule 52 (char_type)


State 38

   31 int_type: SIGNED INT .

    $default  reduce using rule 31 (int_type)


State 39

   55 char_type: SIGNED CHAR .

    $default  reduce using rule 55 (char_type)


State 40

   34 int_type: UNSIGNED SHORT . INT
   58 char_type: UNSIGNED SHORT .

    INT  shift, and go to state 74

    $default  reduce using rule 58 (char_type)


State 41

   33 int_type: UNSIGNED LONG . INT
   57 char_type: UNSIGNED LONG .

    INT  shift, and go to state 75

    $default  reduce using rule 57 (char_type)


State 42

   32 int_type: UNSIGNED LONGLONG . INT
   56 char_type: UNSIGNED LONGLONG .

    INT  shift, and go to state 76

    $default  reduce using rule 56 (char_type)


State 43

   35 int_type: UNSIGNED INT .

    $default  reduce using rule 35 (int_type)


State 44

   59 char_type: UNSIGNED CHAR .

    $default  reduce using rule 59 (char_type)


State 45

   38 int_type: SHORT INT .

    $default  reduce using rule 38 (int_type)


State 46

   37 int_type: LONG INT .

    $default  reduce using rule 37 (int_type)


State 47

   36 int_type: LONGLONG INT .

    $default  reduce using rule 36 (int_type)


State 48

    0 $accept: program $end .

    $default  accept


State 49

    2 program_ingredients: program_ingredients program_ingredient .

    $default  reduce using rule 2 (program_ingredients)


State 50

    9 func_decl: func ';' .

    $default  reduce using rule 9 (func_decl)


State 51

   10 func_def: func '{' . '}'

    '}'  shift, and go to state 77


State 52

   74 ident: ID .

    $default  reduce using rule 74 (ident)


State 53

  128 scalar_decl: type '*' . idents ';'

    ID  shift, and go to state 52

    ident   go to state 78
    idents  go to state 79


State 54

   11 func: type ident . '(' parameters ')'
  129 idents: ident . ',' idents
  130       | ident . '=' expr
  131       | ident .
  135 array: ident . arr_dim
  136      | ident . arr_dim '=' arr_content

    '='  shift, and go to state 80
    ','  shift, and go to state 81
    '['  shift, and go to state 82
    '('  shift, and go to state 83

    $default  reduce using rule 131 (idents)

    arr_dim  go to state 84


State 55

  127 scalar_decl: type idents . ';'

    ';'  shift, and go to state 85


State 56

  132 array_decl: type arrays . ';'

    ';'  shift, and go to state 86


State 57

  133 arrays: array . ',' arrays
  134       | array .

    ','  shift, and go to state 87

    $default  reduce using rule 134 (arrays)


State 58

   18 int_type: CONST SIGNED SHORT . INT
   42 char_type: CONST SIGNED SHORT .

    INT  shift, and go to state 88

    $default  reduce using rule 42 (char_type)


State 59

   17 int_type: CONST SIGNED LONG . INT
   41 char_type: CONST SIGNED LONG .

    INT  shift, and go to state 89

    $default  reduce using rule 41 (char_type)


State 60

   16 int_type: CONST SIGNED LONGLONG . INT
   40 char_type: CONST SIGNED LONGLONG .

    INT  shift, and go to state 90

    $default  reduce using rule 40 (char_type)


State 61

   19 int_type: CONST SIGNED INT .

    $default  reduce using rule 19 (int_type)


State 62

   43 char_type: CONST SIGNED CHAR .

    $default  reduce using rule 43 (char_type)


State 63

   22 int_type: CONST UNSIGNED SHORT . INT
   46 char_type: CONST UNSIGNED SHORT .

    INT  shift, and go to state 91

    $default  reduce using rule 46 (char_type)


State 64

   21 int_type: CONST UNSIGNED LONG . INT
   45 char_type: CONST UNSIGNED LONG .

    INT  shift, and go to state 92

    $default  reduce using rule 45 (char_type)


State 65

   20 int_type: CONST UNSIGNED LONGLONG . INT
   44 char_type: CONST UNSIGNED LONGLONG .

    INT  shift, and go to state 93

    $default  reduce using rule 44 (char_type)


State 66

   23 int_type: CONST UNSIGNED INT .

    $default  reduce using rule 23 (int_type)


State 67

   47 char_type: CONST UNSIGNED CHAR .

    $default  reduce using rule 47 (char_type)


State 68

   26 int_type: CONST SHORT INT .

    $default  reduce using rule 26 (int_type)


State 69

   25 int_type: CONST LONG INT .

    $default  reduce using rule 25 (int_type)


State 70

   24 int_type: CONST LONGLONG INT .

    $default  reduce using rule 24 (int_type)


State 71

   30 int_type: SIGNED SHORT INT .

    $default  reduce using rule 30 (int_type)


State 72

   29 int_type: SIGNED LONG INT .

    $default  reduce using rule 29 (int_type)


State 73

   28 int_type: SIGNED LONGLONG INT .

    $default  reduce using rule 28 (int_type)


State 74

   34 int_type: UNSIGNED SHORT INT .

    $default  reduce using rule 34 (int_type)


State 75

   33 int_type: UNSIGNED LONG INT .

    $default  reduce using rule 33 (int_type)


State 76

   32 int_type: UNSIGNED LONGLONG INT .

    $default  reduce using rule 32 (int_type)


State 77

   10 func_def: func '{' '}' .

    $default  reduce using rule 10 (func_def)


State 78

  129 idents: ident . ',' idents
  130       | ident . '=' expr
  131       | ident .

    '='  shift, and go to state 80
    ','  shift, and go to state 81

    $default  reduce using rule 131 (idents)


State 79

  128 scalar_decl: type '*' idents . ';'

    ';'  shift, and go to state 94


State 80

  130 idents: ident '=' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 115
    literal   go to state 116
    variable  go to state 117


State 81

  129 idents: ident ',' . idents

    ID  shift, and go to state 52

    ident   go to state 78
    idents  go to state 118


State 82

  137 arr_dim: '[' . expr ']'

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 119
    literal   go to state 116
    variable  go to state 117


State 83

   11 func: type ident '(' . parameters ')'

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 145 (parameters)

    type        go to state 120
    int_type    go to state 20
    char_type   go to state 21
    other_type  go to state 22
    parameters  go to state 121


State 84

  135 array: ident arr_dim .
  136      | ident arr_dim . '=' arr_content
  138 arr_dim: arr_dim . '[' expr ']'

    '='  shift, and go to state 122
    '['  shift, and go to state 123

    $default  reduce using rule 135 (array)


State 85

  127 scalar_decl: type idents ';' .

    $default  reduce using rule 127 (scalar_decl)


State 86

  132 array_decl: type arrays ';' .

    $default  reduce using rule 132 (array_decl)


State 87

  133 arrays: array ',' . arrays

    ID  shift, and go to state 52

    ident   go to state 124
    arrays  go to state 125
    array   go to state 57


State 88

   18 int_type: CONST SIGNED SHORT INT .

    $default  reduce using rule 18 (int_type)


State 89

   17 int_type: CONST SIGNED LONG INT .

    $default  reduce using rule 17 (int_type)


State 90

   16 int_type: CONST SIGNED LONGLONG INT .

    $default  reduce using rule 16 (int_type)


State 91

   22 int_type: CONST UNSIGNED SHORT INT .

    $default  reduce using rule 22 (int_type)


State 92

   21 int_type: CONST UNSIGNED LONG INT .

    $default  reduce using rule 21 (int_type)


State 93

   20 int_type: CONST UNSIGNED LONGLONG INT .

    $default  reduce using rule 20 (int_type)


State 94

  128 scalar_decl: type '*' idents ';' .

    $default  reduce using rule 128 (scalar_decl)


State 95

  109 literal: INT_NUM .

    $default  reduce using rule 109 (literal)


State 96

  110 literal: POS_INT_NUM .

    $default  reduce using rule 110 (literal)


State 97

  111 literal: NEG_INT_NUM .

    $default  reduce using rule 111 (literal)


State 98

  112 literal: FLOAT_NUM .

    $default  reduce using rule 112 (literal)


State 99

  113 literal: POS_FLOAT_NUM .

    $default  reduce using rule 113 (literal)


State 100

  114 literal: NEG_FLOAT_NUM .

    $default  reduce using rule 114 (literal)


State 101

  103 expr: '+' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 126
    literal   go to state 116
    variable  go to state 117


State 102

  102 expr: '-' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 127
    literal   go to state 116
    variable  go to state 117


State 103

  104 expr: '*' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 128
    literal   go to state 116
    variable  go to state 117


State 104

   93 expr: '!' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 129
    literal   go to state 116
    variable  go to state 117


State 105

   94 expr: '~' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 130
    literal   go to state 116
    variable  go to state 117


State 106

  105 expr: '&' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 131
    literal   go to state 116
    variable  go to state 117


State 107

   82 expr: INC . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 132
    literal   go to state 116
    variable  go to state 117


State 108

   83 expr: DEC . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 133
    literal   go to state 116
    variable  go to state 117


State 109

  100 expr: '[' . expr ']'

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 134
    literal   go to state 116
    variable  go to state 117


State 110

  101 expr: '(' . expr ')'

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 135
    literal   go to state 116
    variable  go to state 117


State 111

  108 expr: NUL .

    $default  reduce using rule 108 (expr)


State 112

  115 literal: CHAR_START . char CHAR_END

    CHAR          shift, and go to state 136
    ESCAPE_START  shift, and go to state 137

    $default  reduce using rule 119 (char)

    char  go to state 138


State 113

  116 literal: STRING_START . string STRING_END

    STR  shift, and go to state 139

    $default  reduce using rule 122 (string)

    string  go to state 140


State 114

  123 variable: ident .
  124         | ident . arr_dim

    '['  shift, and go to state 82

    $default  reduce using rule 123 (variable)

    arr_dim  go to state 141


State 115

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
  130 idents: ident '=' expr .

    '='     shift, and go to state 142
    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    '|'     shift, and go to state 151
    '^'     shift, and go to state 152
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LAND    shift, and go to state 159
    LOR     shift, and go to state 160
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 130 (idents)


State 116

  106 expr: literal .

    $default  reduce using rule 106 (expr)


State 117

  107 expr: variable .

    $default  reduce using rule 107 (expr)


State 118

  129 idents: ident ',' idents .

    $default  reduce using rule 129 (idents)


State 119

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
  137 arr_dim: '[' expr . ']'

    '='     shift, and go to state 142
    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    '|'     shift, and go to state 151
    '^'     shift, and go to state 152
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LAND    shift, and go to state 159
    LOR     shift, and go to state 160
    ']'     shift, and go to state 163
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162


State 120

  142 parameters: type . ident
  143           | type . '*' ident

    ID   shift, and go to state 52
    '*'  shift, and go to state 164

    ident  go to state 165


State 121

   11 func: type ident '(' parameters . ')'
  144 parameters: parameters . ',' parameters

    ','  shift, and go to state 166
    ')'  shift, and go to state 167


State 122

  136 array: ident arr_dim '=' . arr_content

    '{'  shift, and go to state 168

    arr_content  go to state 169


State 123

  138 arr_dim: arr_dim '[' . expr ']'

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 170
    literal   go to state 116
    variable  go to state 117


State 124

  135 array: ident . arr_dim
  136      | ident . arr_dim '=' arr_content

    '['  shift, and go to state 82

    arr_dim  go to state 84


State 125

  133 arrays: array ',' arrays .

    $default  reduce using rule 133 (arrays)


State 126

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
  103     | '+' expr .

    $default  reduce using rule 103 (expr)


State 127

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
  102     | '-' expr .

    $default  reduce using rule 102 (expr)


State 128

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
  104     | '*' expr .

    $default  reduce using rule 104 (expr)


State 129

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   93     | '!' expr .
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 93 (expr)


State 130

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   94     | '~' expr .
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 94 (expr)


State 131

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
  105     | '&' expr .

    $default  reduce using rule 105 (expr)


State 132

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   82     | INC expr .
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 82 (expr)


State 133

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   83     | DEC expr .
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 83 (expr)


State 134

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
  100     | '[' expr . ']'

    '='     shift, and go to state 142
    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    '|'     shift, and go to state 151
    '^'     shift, and go to state 152
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LAND    shift, and go to state 159
    LOR     shift, and go to state 160
    ']'     shift, and go to state 171
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162


State 135

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
  101     | '(' expr . ')'

    '='     shift, and go to state 142
    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    '|'     shift, and go to state 151
    '^'     shift, and go to state 152
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LAND    shift, and go to state 159
    LOR     shift, and go to state 160
    ')'     shift, and go to state 172
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162


State 136

  117 char: CHAR .

    $default  reduce using rule 117 (char)


State 137

  118 char: ESCAPE_START . ESCAPE_CHAR

    ESCAPE_CHAR  shift, and go to state 173


State 138

  115 literal: CHAR_START char . CHAR_END

    CHAR_END  shift, and go to state 174


State 139

  120 string: STR .
  121       | STR . ESCAPE_START ESCAPE_CHAR STR

    ESCAPE_START  shift, and go to state 175

    $default  reduce using rule 120 (string)


State 140

  116 literal: STRING_START string . STRING_END

    STRING_END  shift, and go to state 176


State 141

  124 variable: ident arr_dim .
  138 arr_dim: arr_dim . '[' expr ']'

    '['  shift, and go to state 123

    $default  reduce using rule 124 (variable)


State 142

   90 expr: expr '=' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 177
    literal   go to state 116
    variable  go to state 117


State 143

   75 expr: expr '+' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 178
    literal   go to state 116
    variable  go to state 117


State 144

   76 expr: expr '-' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 179
    literal   go to state 116
    variable  go to state 117


State 145

   77 expr: expr '*' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 180
    literal   go to state 116
    variable  go to state 117


State 146

   78 expr: expr '/' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 181
    literal   go to state 116
    variable  go to state 117


State 147

   79 expr: expr '%' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 182
    literal   go to state 116
    variable  go to state 117


State 148

   84 expr: expr '<' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 183
    literal   go to state 116
    variable  go to state 117


State 149

   86 expr: expr '>' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 184
    literal   go to state 116
    variable  go to state 117


State 150

   96 expr: expr '&' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 185
    literal   go to state 116
    variable  go to state 117


State 151

   97 expr: expr '|' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 186
    literal   go to state 116
    variable  go to state 117


State 152

   95 expr: expr '^' . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 187
    literal   go to state 116
    variable  go to state 117


State 153

   80 expr: expr INC .

    $default  reduce using rule 80 (expr)


State 154

   81 expr: expr DEC .

    $default  reduce using rule 81 (expr)


State 155

   85 expr: expr LEQ . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 188
    literal   go to state 116
    variable  go to state 117


State 156

   87 expr: expr GEQ . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 189
    literal   go to state 116
    variable  go to state 117


State 157

   88 expr: expr EQL . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 190
    literal   go to state 116
    variable  go to state 117


State 158

   89 expr: expr NEQ . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 191
    literal   go to state 116
    variable  go to state 117


State 159

   91 expr: expr LAND . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 192
    literal   go to state 116
    variable  go to state 117


State 160

   92 expr: expr LOR . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 193
    literal   go to state 116
    variable  go to state 117


State 161

   98 expr: expr LSHIFT . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 194
    literal   go to state 116
    variable  go to state 117


State 162

   99 expr: expr RSHIFT . expr

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 195
    literal   go to state 116
    variable  go to state 117


State 163

  137 arr_dim: '[' expr ']' .

    $default  reduce using rule 137 (arr_dim)


State 164

  143 parameters: type '*' . ident

    ID  shift, and go to state 52

    ident  go to state 196


State 165

  142 parameters: type ident .

    $default  reduce using rule 142 (parameters)


State 166

  144 parameters: parameters ',' . parameters

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 145 (parameters)

    type        go to state 120
    int_type    go to state 20
    char_type   go to state 21
    other_type  go to state 22
    parameters  go to state 197


State 167

   11 func: type ident '(' parameters ')' .

    $default  reduce using rule 11 (func)


State 168

  139 arr_content: '{' . exprs '}'
  140            | '{' . arr_content '}'

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    '{'            shift, and go to state 168
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident        go to state 114
    expr         go to state 198
    literal      go to state 116
    variable     go to state 117
    exprs        go to state 199
    arr_content  go to state 200


State 169

  136 array: ident arr_dim '=' arr_content .
  141 arr_content: arr_content . ',' arr_content

    $default  reduce using rule 136 (array)


State 170

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
  138 arr_dim: arr_dim '[' expr . ']'

    '='     shift, and go to state 142
    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    '|'     shift, and go to state 151
    '^'     shift, and go to state 152
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LAND    shift, and go to state 159
    LOR     shift, and go to state 160
    ']'     shift, and go to state 202
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162


State 171

  100 expr: '[' expr ']' .

    $default  reduce using rule 100 (expr)


State 172

  101 expr: '(' expr ')' .

    $default  reduce using rule 101 (expr)


State 173

  118 char: ESCAPE_START ESCAPE_CHAR .

    $default  reduce using rule 118 (char)


State 174

  115 literal: CHAR_START char CHAR_END .

    $default  reduce using rule 115 (literal)


State 175

  121 string: STR ESCAPE_START . ESCAPE_CHAR STR

    ESCAPE_CHAR  shift, and go to state 203


State 176

  116 literal: STRING_START string STRING_END .

    $default  reduce using rule 116 (literal)


State 177

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   90     | expr '=' expr .
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '='     shift, and go to state 142
    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    '|'     shift, and go to state 151
    '^'     shift, and go to state 152
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LAND    shift, and go to state 159
    LOR     shift, and go to state 160
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 90 (expr)


State 178

   75 expr: expr . '+' expr
   75     | expr '+' expr .
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '*'  shift, and go to state 145
    '/'  shift, and go to state 146
    '%'  shift, and go to state 147
    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 75 (expr)


State 179

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   76     | expr '-' expr .
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '*'  shift, and go to state 145
    '/'  shift, and go to state 146
    '%'  shift, and go to state 147
    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 76 (expr)


State 180

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   77     | expr '*' expr .
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 77 (expr)


State 181

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   78     | expr '/' expr .
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 78 (expr)


State 182

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   79     | expr '%' expr .
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 79 (expr)


State 183

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   84     | expr '<' expr .
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 84 (expr)


State 184

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   86     | expr '>' expr .
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 86 (expr)


State 185

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   96     | expr '&' expr .
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 96 (expr)


State 186

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   97     | expr '|' expr .
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    '^'     shift, and go to state 152
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 97 (expr)


State 187

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   95     | expr '^' expr .
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 95 (expr)


State 188

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   85     | expr LEQ expr .
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 85 (expr)


State 189

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   87     | expr GEQ expr .
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 87 (expr)


State 190

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   88     | expr EQL expr .
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 88 (expr)


State 191

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   89     | expr NEQ expr .
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 89 (expr)


State 192

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   91     | expr LAND expr .
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    '|'     shift, and go to state 151
    '^'     shift, and go to state 152
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 91 (expr)


State 193

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   92     | expr LOR expr .
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr

    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    '|'     shift, and go to state 151
    '^'     shift, and go to state 152
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LAND    shift, and go to state 159
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 92 (expr)


State 194

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   98     | expr LSHIFT expr .
   99     | expr . RSHIFT expr

    '+'  shift, and go to state 143
    '-'  shift, and go to state 144
    '*'  shift, and go to state 145
    '/'  shift, and go to state 146
    '%'  shift, and go to state 147
    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 98 (expr)


State 195

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
   99     | expr RSHIFT expr .

    '+'  shift, and go to state 143
    '-'  shift, and go to state 144
    '*'  shift, and go to state 145
    '/'  shift, and go to state 146
    '%'  shift, and go to state 147
    INC  shift, and go to state 153
    DEC  shift, and go to state 154

    $default  reduce using rule 99 (expr)


State 196

  143 parameters: type '*' ident .

    $default  reduce using rule 143 (parameters)


State 197

  144 parameters: parameters . ',' parameters
  144           | parameters ',' parameters .

    $default  reduce using rule 144 (parameters)


State 198

   75 expr: expr . '+' expr
   76     | expr . '-' expr
   77     | expr . '*' expr
   78     | expr . '/' expr
   79     | expr . '%' expr
   80     | expr . INC
   81     | expr . DEC
   84     | expr . '<' expr
   85     | expr . LEQ expr
   86     | expr . '>' expr
   87     | expr . GEQ expr
   88     | expr . EQL expr
   89     | expr . NEQ expr
   90     | expr . '=' expr
   91     | expr . LAND expr
   92     | expr . LOR expr
   95     | expr . '^' expr
   96     | expr . '&' expr
   97     | expr . '|' expr
   98     | expr . LSHIFT expr
   99     | expr . RSHIFT expr
  125 exprs: expr .
  126      | expr . ',' exprs

    '='     shift, and go to state 142
    '+'     shift, and go to state 143
    '-'     shift, and go to state 144
    '*'     shift, and go to state 145
    '/'     shift, and go to state 146
    '%'     shift, and go to state 147
    '<'     shift, and go to state 148
    '>'     shift, and go to state 149
    '&'     shift, and go to state 150
    '|'     shift, and go to state 151
    '^'     shift, and go to state 152
    INC     shift, and go to state 153
    DEC     shift, and go to state 154
    LEQ     shift, and go to state 155
    GEQ     shift, and go to state 156
    EQL     shift, and go to state 157
    NEQ     shift, and go to state 158
    LAND    shift, and go to state 159
    LOR     shift, and go to state 160
    ','     shift, and go to state 204
    LSHIFT  shift, and go to state 161
    RSHIFT  shift, and go to state 162

    $default  reduce using rule 125 (exprs)


State 199

  139 arr_content: '{' exprs . '}'

    '}'  shift, and go to state 205


State 200

  140 arr_content: '{' arr_content . '}'
  141            | arr_content . ',' arr_content

    ','  shift, and go to state 201
    '}'  shift, and go to state 206


State 201

  141 arr_content: arr_content ',' . arr_content

    '{'  shift, and go to state 168

    arr_content  go to state 207


State 202

  138 arr_dim: arr_dim '[' expr ']' .

    $default  reduce using rule 138 (arr_dim)


State 203

  121 string: STR ESCAPE_START ESCAPE_CHAR . STR

    STR  shift, and go to state 208


State 204

  126 exprs: expr ',' . exprs

    INT_NUM        shift, and go to state 95
    POS_INT_NUM    shift, and go to state 96
    NEG_INT_NUM    shift, and go to state 97
    FLOAT_NUM      shift, and go to state 98
    POS_FLOAT_NUM  shift, and go to state 99
    NEG_FLOAT_NUM  shift, and go to state 100
    ID             shift, and go to state 52
    '+'            shift, and go to state 101
    '-'            shift, and go to state 102
    '*'            shift, and go to state 103
    '!'            shift, and go to state 104
    '~'            shift, and go to state 105
    '&'            shift, and go to state 106
    INC            shift, and go to state 107
    DEC            shift, and go to state 108
    '['            shift, and go to state 109
    '('            shift, and go to state 110
    NUL            shift, and go to state 111
    CHAR_START     shift, and go to state 112
    STRING_START   shift, and go to state 113

    ident     go to state 114
    expr      go to state 198
    literal   go to state 116
    variable  go to state 117
    exprs     go to state 209


State 205

  139 arr_content: '{' exprs '}' .

    $default  reduce using rule 139 (arr_content)


State 206

  140 arr_content: '{' arr_content '}' .

    $default  reduce using rule 140 (arr_content)


State 207

  141 arr_content: arr_content . ',' arr_content
  141            | arr_content ',' arr_content .

    $default  reduce using rule 141 (arr_content)


State 208

  121 string: STR ESCAPE_START ESCAPE_CHAR STR .

    $default  reduce using rule 121 (string)


State 209

  126 exprs: expr ',' exprs .

    $default  reduce using rule 126 (exprs)
