Terminals unused in grammar

   ':'
   '.'
   STRUCT
   RETURN
   FOR
   DO
   WHILE
   BREAK
   CONTINUE
   IF
   ELSE
   SWITCH
   CASE
   DEFAULT


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement statements
    3           | statement

    4 statement: global_variable_decls

    5 global_variable_decls: scalar_decl ';'
    6                      | array_decl ';'
    7                      | func_decl ';'
    8                      | func_def

    9 type: int_type
   10     | char_type
   11     | other_type
   12     | CONST

   13 int_type: CONST SIGNED LONGLONG INT
   14         | CONST SIGNED LONG INT
   15         | CONST SIGNED SHORT INT
   16         | CONST SIGNED INT
   17         | CONST UNSIGNED LONGLONG INT
   18         | CONST UNSIGNED LONG INT
   19         | CONST UNSIGNED SHORT INT
   20         | CONST UNSIGNED INT
   21         | CONST LONGLONG INT
   22         | CONST LONG INT
   23         | CONST SHORT INT
   24         | CONST INT
   25         | SIGNED LONGLONG INT
   26         | SIGNED LONG INT
   27         | SIGNED SHORT INT
   28         | SIGNED INT
   29         | UNSIGNED LONGLONG INT
   30         | UNSIGNED LONG INT
   31         | UNSIGNED SHORT INT
   32         | UNSIGNED INT
   33         | LONGLONG INT
   34         | LONG INT
   35         | SHORT INT
   36         | INT

   37 char_type: CONST SIGNED LONGLONG
   38          | CONST SIGNED LONG
   39          | CONST SIGNED SHORT
   40          | CONST SIGNED CHAR
   41          | CONST UNSIGNED LONGLONG
   42          | CONST UNSIGNED LONG
   43          | CONST UNSIGNED SHORT
   44          | CONST UNSIGNED CHAR
   45          | CONST LONGLONG
   46          | CONST LONG
   47          | CONST SHORT
   48          | CONST CHAR
   49          | SIGNED LONGLONG
   50          | SIGNED LONG
   51          | SIGNED SHORT
   52          | SIGNED CHAR
   53          | UNSIGNED LONGLONG
   54          | UNSIGNED LONG
   55          | UNSIGNED SHORT
   56          | UNSIGNED CHAR
   57          | LONGLONG
   58          | LONG
   59          | SHORT
   60          | CHAR

   61 other_type: CONST SIGNED
   62           | CONST UNSIGNED
   63           | CONST FLOAT
   64           | CONST DOUBLE
   65           | CONST VOID
   66           | SIGNED
   67           | UNSIGNED
   68           | FLOAT
   69           | DOUBLE
   70           | VOID

   71 ident: ID

   72 expr: expr '+' expr
   73     | expr '-' expr
   74     | expr '*' expr
   75     | expr '/' expr
   76     | expr '%' expr
   77     | expr INC
   78     | expr DEC
   79     | INC expr
   80     | DEC expr
   81     | expr '<' expr
   82     | expr LEQ expr
   83     | expr '>' expr
   84     | expr GEQ expr
   85     | expr EQL expr
   86     | expr NEQ expr
   87     | expr '=' expr
   88     | expr LAND expr
   89     | expr LOR expr
   90     | '!' expr
   91     | '~' expr
   92     | expr '^' expr
   93     | expr '&' expr
   94     | expr '|' expr
   95     | expr LSHIFT expr
   96     | expr RSHIFT expr
   97     | '[' expr ']'
   98     | '(' expr ')'
   99     | '-' expr
  100     | '+' expr
  101     | '*' expr
  102     | '&' expr
  103     | literal
  104     | variable
  105     | NUL

  106 literal: INT_NUM
  107        | POS_INT_NUM
  108        | NEG_INT_NUM
  109        | FLOAT_NUM
  110        | POS_FLOAT_NUM
  111        | NEG_FLOAT_NUM
  112        | CHAR_START char CHAR_END
  113        | STRING_START string STRING_END

  114 char: CHAR
  115     | ESCAPE_START ESCAPE_CHAR
  116     | %empty

  117 string: STR
  118       | STR ESCAPE_START ESCAPE_CHAR STR
  119       | %empty

  120 variable: ident
  121         | ident arr_dim

  122 exprs: expr
  123      | expr ',' exprs

  124 scalar_decl: type idents
  125            | type '*' idents

  126 idents: ident ',' idents
  127       | ident '=' expr
  128       | ident

  129 array_decl: type arrays

  130 arrays: array ',' arrays
  131       | array

  132 array: ident arr_dim
  133      | ident arr_dim '=' arr_content

  134 arr_dim: '[' expr ']'
  135        | arr_dim '[' expr ']'

  136 arr_content: '{' exprs '}'
  137            | '{' arr_content '}'
  138            | arr_content ',' arr_content

  139 func_decl: type ident '(' parameters ')'

  140 parameters: type ident
  141           | type ident ',' parameters
  142           | %empty

  143 func_def: func_decl compound_stmt

  144 compound_stmt: '{' '}'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 90
'%' (37) 76
'&' (38) 93 102
'(' (40) 98 139
')' (41) 98 139
'*' (42) 74 101 125
'+' (43) 72 100
',' (44) 123 126 130 138 141
'-' (45) 73 99
'.' (46)
'/' (47) 75
':' (58)
';' (59) 5 6 7
'<' (60) 81
'=' (61) 87 127 133
'>' (62) 83
'[' (91) 97 134 135
']' (93) 97 134 135
'^' (94) 92
'{' (123) 136 137 144
'|' (124) 94
'}' (125) 136 137 144
'~' (126) 91
error (256)
INT_NUM (258) 106
POS_INT_NUM (259) 107
NEG_INT_NUM (260) 108
FLOAT_NUM (261) 109
POS_FLOAT_NUM (262) 110
NEG_FLOAT_NUM (263) 111
ID (264) 71
INC (265) 77 79
DEC (266) 78 80
LEQ (267) 82
GEQ (268) 84
EQL (269) 85
NEQ (270) 86
LAND (271) 88
LOR (272) 89
CONST (273) 12 13 14 15 16 17 18 19 20 21 22 23 24 37 38 39 40 41 42
    43 44 45 46 47 48 61 62 63 64 65
SIGNED (274) 13 14 15 16 25 26 27 28 37 38 39 40 49 50 51 52 61 66
UNSIGNED (275) 17 18 19 20 29 30 31 32 41 42 43 44 53 54 55 56 62 67
SHORT (276) 15 19 23 27 31 35 39 43 47 51 55 59
LONG (277) 14 18 22 26 30 34 38 42 46 50 54 58
LONGLONG (278) 13 17 21 25 29 33 37 41 45 49 53 57
INT (279) 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36
CHAR (280) 40 44 48 52 56 60 114
DOUBLE (281) 64 69
VOID (282) 65 70
FLOAT (283) 63 68
STRUCT (284)
RETURN (285)
LSHIFT (286) 95
RSHIFT (287) 96
STR (288) 117 118
NUL (289) 105
FOR (290)
DO (291)
WHILE (292)
BREAK (293)
CONTINUE (294)
IF (295)
ELSE (296)
SWITCH (297)
CASE (298)
DEFAULT (299)
CHAR_START (300) 112
CHAR_END (301) 112
ESCAPE_START (302) 115 118
ESCAPE_CHAR (303) 115 118
STRING_START (304) 113
STRING_END (305) 113
UMINUS (306)
UPLUS (307)
DEREF (308)
ADDR (309)


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
program (79)
    on left: 1, on right: 0
statements (80)
    on left: 2 3, on right: 1 2
statement (81)
    on left: 4, on right: 2 3
global_variable_decls (82)
    on left: 5 6 7 8, on right: 4
type (83)
    on left: 9 10 11 12, on right: 124 125 129 139 140 141
int_type (84)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    31 32 33 34 35 36, on right: 9
char_type (85)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58 59 60, on right: 10
other_type (86)
    on left: 61 62 63 64 65 66 67 68 69 70, on right: 11
ident (87)
    on left: 71, on right: 120 121 126 127 128 132 133 139 140 141
expr (88)
    on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
    90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105, on right:
    72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
    93 94 95 96 97 98 99 100 101 102 122 123 127 134 135
literal (89)
    on left: 106 107 108 109 110 111 112 113, on right: 103
char (90)
    on left: 114 115 116, on right: 112
string (91)
    on left: 117 118 119, on right: 113
variable (92)
    on left: 120 121, on right: 104
exprs (93)
    on left: 122 123, on right: 123 136
scalar_decl (94)
    on left: 124 125, on right: 5
idents (95)
    on left: 126 127 128, on right: 124 125 126
array_decl (96)
    on left: 129, on right: 6
arrays (97)
    on left: 130 131, on right: 129 130
array (98)
    on left: 132 133, on right: 130 131
arr_dim (99)
    on left: 134 135, on right: 121 132 133 135
arr_content (100)
    on left: 136 137 138, on right: 133 137 138
func_decl (101)
    on left: 139, on right: 7 143
parameters (102)
    on left: 140 141 142, on right: 139 141
func_def (103)
    on left: 143, on right: 8
compound_stmt (104)
    on left: 144, on right: 143


State 0

    0 $accept: . program $end

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    program                go to state 12
    statements             go to state 13
    statement              go to state 14
    global_variable_decls  go to state 15
    type                   go to state 16
    int_type               go to state 17
    char_type              go to state 18
    other_type             go to state 19
    scalar_decl            go to state 20
    array_decl             go to state 21
    func_decl              go to state 22
    func_def               go to state 23


State 1

   12 type: CONST .
   13 int_type: CONST . SIGNED LONGLONG INT
   14         | CONST . SIGNED LONG INT
   15         | CONST . SIGNED SHORT INT
   16         | CONST . SIGNED INT
   17         | CONST . UNSIGNED LONGLONG INT
   18         | CONST . UNSIGNED LONG INT
   19         | CONST . UNSIGNED SHORT INT
   20         | CONST . UNSIGNED INT
   21         | CONST . LONGLONG INT
   22         | CONST . LONG INT
   23         | CONST . SHORT INT
   24         | CONST . INT
   37 char_type: CONST . SIGNED LONGLONG
   38          | CONST . SIGNED LONG
   39          | CONST . SIGNED SHORT
   40          | CONST . SIGNED CHAR
   41          | CONST . UNSIGNED LONGLONG
   42          | CONST . UNSIGNED LONG
   43          | CONST . UNSIGNED SHORT
   44          | CONST . UNSIGNED CHAR
   45          | CONST . LONGLONG
   46          | CONST . LONG
   47          | CONST . SHORT
   48          | CONST . CHAR
   61 other_type: CONST . SIGNED
   62           | CONST . UNSIGNED
   63           | CONST . FLOAT
   64           | CONST . DOUBLE
   65           | CONST . VOID

    SIGNED    shift, and go to state 24
    UNSIGNED  shift, and go to state 25
    SHORT     shift, and go to state 26
    LONG      shift, and go to state 27
    LONGLONG  shift, and go to state 28
    INT       shift, and go to state 29
    CHAR      shift, and go to state 30
    DOUBLE    shift, and go to state 31
    VOID      shift, and go to state 32
    FLOAT     shift, and go to state 33

    $default  reduce using rule 12 (type)


State 2

   25 int_type: SIGNED . LONGLONG INT
   26         | SIGNED . LONG INT
   27         | SIGNED . SHORT INT
   28         | SIGNED . INT
   49 char_type: SIGNED . LONGLONG
   50          | SIGNED . LONG
   51          | SIGNED . SHORT
   52          | SIGNED . CHAR
   66 other_type: SIGNED .

    SHORT     shift, and go to state 34
    LONG      shift, and go to state 35
    LONGLONG  shift, and go to state 36
    INT       shift, and go to state 37
    CHAR      shift, and go to state 38

    $default  reduce using rule 66 (other_type)


State 3

   29 int_type: UNSIGNED . LONGLONG INT
   30         | UNSIGNED . LONG INT
   31         | UNSIGNED . SHORT INT
   32         | UNSIGNED . INT
   53 char_type: UNSIGNED . LONGLONG
   54          | UNSIGNED . LONG
   55          | UNSIGNED . SHORT
   56          | UNSIGNED . CHAR
   67 other_type: UNSIGNED .

    SHORT     shift, and go to state 39
    LONG      shift, and go to state 40
    LONGLONG  shift, and go to state 41
    INT       shift, and go to state 42
    CHAR      shift, and go to state 43

    $default  reduce using rule 67 (other_type)


State 4

   35 int_type: SHORT . INT
   59 char_type: SHORT .

    INT  shift, and go to state 44

    $default  reduce using rule 59 (char_type)


State 5

   34 int_type: LONG . INT
   58 char_type: LONG .

    INT  shift, and go to state 45

    $default  reduce using rule 58 (char_type)


State 6

   33 int_type: LONGLONG . INT
   57 char_type: LONGLONG .

    INT  shift, and go to state 46

    $default  reduce using rule 57 (char_type)


State 7

   36 int_type: INT .

    $default  reduce using rule 36 (int_type)


State 8

   60 char_type: CHAR .

    $default  reduce using rule 60 (char_type)


State 9

   69 other_type: DOUBLE .

    $default  reduce using rule 69 (other_type)


State 10

   70 other_type: VOID .

    $default  reduce using rule 70 (other_type)


State 11

   68 other_type: FLOAT .

    $default  reduce using rule 68 (other_type)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 47


State 13

    1 program: statements .

    $default  reduce using rule 1 (program)


State 14

    2 statements: statement . statements
    3           | statement .

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 3 (statements)

    statements             go to state 48
    statement              go to state 14
    global_variable_decls  go to state 15
    type                   go to state 16
    int_type               go to state 17
    char_type              go to state 18
    other_type             go to state 19
    scalar_decl            go to state 20
    array_decl             go to state 21
    func_decl              go to state 22
    func_def               go to state 23


State 15

    4 statement: global_variable_decls .

    $default  reduce using rule 4 (statement)


State 16

  124 scalar_decl: type . idents
  125            | type . '*' idents
  129 array_decl: type . arrays
  139 func_decl: type . ident '(' parameters ')'

    ID   shift, and go to state 49
    '*'  shift, and go to state 50

    ident   go to state 51
    idents  go to state 52
    arrays  go to state 53
    array   go to state 54


State 17

    9 type: int_type .

    $default  reduce using rule 9 (type)


State 18

   10 type: char_type .

    $default  reduce using rule 10 (type)


State 19

   11 type: other_type .

    $default  reduce using rule 11 (type)


State 20

    5 global_variable_decls: scalar_decl . ';'

    ';'  shift, and go to state 55


State 21

    6 global_variable_decls: array_decl . ';'

    ';'  shift, and go to state 56


State 22

    7 global_variable_decls: func_decl . ';'
  143 func_def: func_decl . compound_stmt

    ';'  shift, and go to state 57
    '{'  shift, and go to state 58

    compound_stmt  go to state 59


State 23

    8 global_variable_decls: func_def .

    $default  reduce using rule 8 (global_variable_decls)


State 24

   13 int_type: CONST SIGNED . LONGLONG INT
   14         | CONST SIGNED . LONG INT
   15         | CONST SIGNED . SHORT INT
   16         | CONST SIGNED . INT
   37 char_type: CONST SIGNED . LONGLONG
   38          | CONST SIGNED . LONG
   39          | CONST SIGNED . SHORT
   40          | CONST SIGNED . CHAR
   61 other_type: CONST SIGNED .

    SHORT     shift, and go to state 60
    LONG      shift, and go to state 61
    LONGLONG  shift, and go to state 62
    INT       shift, and go to state 63
    CHAR      shift, and go to state 64

    $default  reduce using rule 61 (other_type)


State 25

   17 int_type: CONST UNSIGNED . LONGLONG INT
   18         | CONST UNSIGNED . LONG INT
   19         | CONST UNSIGNED . SHORT INT
   20         | CONST UNSIGNED . INT
   41 char_type: CONST UNSIGNED . LONGLONG
   42          | CONST UNSIGNED . LONG
   43          | CONST UNSIGNED . SHORT
   44          | CONST UNSIGNED . CHAR
   62 other_type: CONST UNSIGNED .

    SHORT     shift, and go to state 65
    LONG      shift, and go to state 66
    LONGLONG  shift, and go to state 67
    INT       shift, and go to state 68
    CHAR      shift, and go to state 69

    $default  reduce using rule 62 (other_type)


State 26

   23 int_type: CONST SHORT . INT
   47 char_type: CONST SHORT .

    INT  shift, and go to state 70

    $default  reduce using rule 47 (char_type)


State 27

   22 int_type: CONST LONG . INT
   46 char_type: CONST LONG .

    INT  shift, and go to state 71

    $default  reduce using rule 46 (char_type)


State 28

   21 int_type: CONST LONGLONG . INT
   45 char_type: CONST LONGLONG .

    INT  shift, and go to state 72

    $default  reduce using rule 45 (char_type)


State 29

   24 int_type: CONST INT .

    $default  reduce using rule 24 (int_type)


State 30

   48 char_type: CONST CHAR .

    $default  reduce using rule 48 (char_type)


State 31

   64 other_type: CONST DOUBLE .

    $default  reduce using rule 64 (other_type)


State 32

   65 other_type: CONST VOID .

    $default  reduce using rule 65 (other_type)


State 33

   63 other_type: CONST FLOAT .

    $default  reduce using rule 63 (other_type)


State 34

   27 int_type: SIGNED SHORT . INT
   51 char_type: SIGNED SHORT .

    INT  shift, and go to state 73

    $default  reduce using rule 51 (char_type)


State 35

   26 int_type: SIGNED LONG . INT
   50 char_type: SIGNED LONG .

    INT  shift, and go to state 74

    $default  reduce using rule 50 (char_type)


State 36

   25 int_type: SIGNED LONGLONG . INT
   49 char_type: SIGNED LONGLONG .

    INT  shift, and go to state 75

    $default  reduce using rule 49 (char_type)


State 37

   28 int_type: SIGNED INT .

    $default  reduce using rule 28 (int_type)


State 38

   52 char_type: SIGNED CHAR .

    $default  reduce using rule 52 (char_type)


State 39

   31 int_type: UNSIGNED SHORT . INT
   55 char_type: UNSIGNED SHORT .

    INT  shift, and go to state 76

    $default  reduce using rule 55 (char_type)


State 40

   30 int_type: UNSIGNED LONG . INT
   54 char_type: UNSIGNED LONG .

    INT  shift, and go to state 77

    $default  reduce using rule 54 (char_type)


State 41

   29 int_type: UNSIGNED LONGLONG . INT
   53 char_type: UNSIGNED LONGLONG .

    INT  shift, and go to state 78

    $default  reduce using rule 53 (char_type)


State 42

   32 int_type: UNSIGNED INT .

    $default  reduce using rule 32 (int_type)


State 43

   56 char_type: UNSIGNED CHAR .

    $default  reduce using rule 56 (char_type)


State 44

   35 int_type: SHORT INT .

    $default  reduce using rule 35 (int_type)


State 45

   34 int_type: LONG INT .

    $default  reduce using rule 34 (int_type)


State 46

   33 int_type: LONGLONG INT .

    $default  reduce using rule 33 (int_type)


State 47

    0 $accept: program $end .

    $default  accept


State 48

    2 statements: statement statements .

    $default  reduce using rule 2 (statements)


State 49

   71 ident: ID .

    $default  reduce using rule 71 (ident)


State 50

  125 scalar_decl: type '*' . idents

    ID  shift, and go to state 49

    ident   go to state 79
    idents  go to state 80


State 51

  126 idents: ident . ',' idents
  127       | ident . '=' expr
  128       | ident .
  132 array: ident . arr_dim
  133      | ident . arr_dim '=' arr_content
  139 func_decl: type ident . '(' parameters ')'

    '='  shift, and go to state 81
    ','  shift, and go to state 82
    '['  shift, and go to state 83
    '('  shift, and go to state 84

    $default  reduce using rule 128 (idents)

    arr_dim  go to state 85


State 52

  124 scalar_decl: type idents .

    $default  reduce using rule 124 (scalar_decl)


State 53

  129 array_decl: type arrays .

    $default  reduce using rule 129 (array_decl)


State 54

  130 arrays: array . ',' arrays
  131       | array .

    ','  shift, and go to state 86

    $default  reduce using rule 131 (arrays)


State 55

    5 global_variable_decls: scalar_decl ';' .

    $default  reduce using rule 5 (global_variable_decls)


State 56

    6 global_variable_decls: array_decl ';' .

    $default  reduce using rule 6 (global_variable_decls)


State 57

    7 global_variable_decls: func_decl ';' .

    $default  reduce using rule 7 (global_variable_decls)


State 58

  144 compound_stmt: '{' . '}'

    '}'  shift, and go to state 87


State 59

  143 func_def: func_decl compound_stmt .

    $default  reduce using rule 143 (func_def)


State 60

   15 int_type: CONST SIGNED SHORT . INT
   39 char_type: CONST SIGNED SHORT .

    INT  shift, and go to state 88

    $default  reduce using rule 39 (char_type)


State 61

   14 int_type: CONST SIGNED LONG . INT
   38 char_type: CONST SIGNED LONG .

    INT  shift, and go to state 89

    $default  reduce using rule 38 (char_type)


State 62

   13 int_type: CONST SIGNED LONGLONG . INT
   37 char_type: CONST SIGNED LONGLONG .

    INT  shift, and go to state 90

    $default  reduce using rule 37 (char_type)


State 63

   16 int_type: CONST SIGNED INT .

    $default  reduce using rule 16 (int_type)


State 64

   40 char_type: CONST SIGNED CHAR .

    $default  reduce using rule 40 (char_type)


State 65

   19 int_type: CONST UNSIGNED SHORT . INT
   43 char_type: CONST UNSIGNED SHORT .

    INT  shift, and go to state 91

    $default  reduce using rule 43 (char_type)


State 66

   18 int_type: CONST UNSIGNED LONG . INT
   42 char_type: CONST UNSIGNED LONG .

    INT  shift, and go to state 92

    $default  reduce using rule 42 (char_type)


State 67

   17 int_type: CONST UNSIGNED LONGLONG . INT
   41 char_type: CONST UNSIGNED LONGLONG .

    INT  shift, and go to state 93

    $default  reduce using rule 41 (char_type)


State 68

   20 int_type: CONST UNSIGNED INT .

    $default  reduce using rule 20 (int_type)


State 69

   44 char_type: CONST UNSIGNED CHAR .

    $default  reduce using rule 44 (char_type)


State 70

   23 int_type: CONST SHORT INT .

    $default  reduce using rule 23 (int_type)


State 71

   22 int_type: CONST LONG INT .

    $default  reduce using rule 22 (int_type)


State 72

   21 int_type: CONST LONGLONG INT .

    $default  reduce using rule 21 (int_type)


State 73

   27 int_type: SIGNED SHORT INT .

    $default  reduce using rule 27 (int_type)


State 74

   26 int_type: SIGNED LONG INT .

    $default  reduce using rule 26 (int_type)


State 75

   25 int_type: SIGNED LONGLONG INT .

    $default  reduce using rule 25 (int_type)


State 76

   31 int_type: UNSIGNED SHORT INT .

    $default  reduce using rule 31 (int_type)


State 77

   30 int_type: UNSIGNED LONG INT .

    $default  reduce using rule 30 (int_type)


State 78

   29 int_type: UNSIGNED LONGLONG INT .

    $default  reduce using rule 29 (int_type)


State 79

  126 idents: ident . ',' idents
  127       | ident . '=' expr
  128       | ident .

    '='  shift, and go to state 81
    ','  shift, and go to state 82

    $default  reduce using rule 128 (idents)


State 80

  125 scalar_decl: type '*' idents .

    $default  reduce using rule 125 (scalar_decl)


State 81

  127 idents: ident '=' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 114
    literal   go to state 115
    variable  go to state 116


State 82

  126 idents: ident ',' . idents

    ID  shift, and go to state 49

    ident   go to state 79
    idents  go to state 117


State 83

  134 arr_dim: '[' . expr ']'

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 118
    literal   go to state 115
    variable  go to state 116


State 84

  139 func_decl: type ident '(' . parameters ')'

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 142 (parameters)

    type        go to state 119
    int_type    go to state 17
    char_type   go to state 18
    other_type  go to state 19
    parameters  go to state 120


State 85

  132 array: ident arr_dim .
  133      | ident arr_dim . '=' arr_content
  135 arr_dim: arr_dim . '[' expr ']'

    '='  shift, and go to state 121
    '['  shift, and go to state 122

    $default  reduce using rule 132 (array)


State 86

  130 arrays: array ',' . arrays

    ID  shift, and go to state 49

    ident   go to state 123
    arrays  go to state 124
    array   go to state 54


State 87

  144 compound_stmt: '{' '}' .

    $default  reduce using rule 144 (compound_stmt)


State 88

   15 int_type: CONST SIGNED SHORT INT .

    $default  reduce using rule 15 (int_type)


State 89

   14 int_type: CONST SIGNED LONG INT .

    $default  reduce using rule 14 (int_type)


State 90

   13 int_type: CONST SIGNED LONGLONG INT .

    $default  reduce using rule 13 (int_type)


State 91

   19 int_type: CONST UNSIGNED SHORT INT .

    $default  reduce using rule 19 (int_type)


State 92

   18 int_type: CONST UNSIGNED LONG INT .

    $default  reduce using rule 18 (int_type)


State 93

   17 int_type: CONST UNSIGNED LONGLONG INT .

    $default  reduce using rule 17 (int_type)


State 94

  106 literal: INT_NUM .

    $default  reduce using rule 106 (literal)


State 95

  107 literal: POS_INT_NUM .

    $default  reduce using rule 107 (literal)


State 96

  108 literal: NEG_INT_NUM .

    $default  reduce using rule 108 (literal)


State 97

  109 literal: FLOAT_NUM .

    $default  reduce using rule 109 (literal)


State 98

  110 literal: POS_FLOAT_NUM .

    $default  reduce using rule 110 (literal)


State 99

  111 literal: NEG_FLOAT_NUM .

    $default  reduce using rule 111 (literal)


State 100

  100 expr: '+' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 125
    literal   go to state 115
    variable  go to state 116


State 101

   99 expr: '-' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 126
    literal   go to state 115
    variable  go to state 116


State 102

  101 expr: '*' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 127
    literal   go to state 115
    variable  go to state 116


State 103

   90 expr: '!' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 128
    literal   go to state 115
    variable  go to state 116


State 104

   91 expr: '~' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 129
    literal   go to state 115
    variable  go to state 116


State 105

  102 expr: '&' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 130
    literal   go to state 115
    variable  go to state 116


State 106

   79 expr: INC . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 131
    literal   go to state 115
    variable  go to state 116


State 107

   80 expr: DEC . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 132
    literal   go to state 115
    variable  go to state 116


State 108

   97 expr: '[' . expr ']'

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 133
    literal   go to state 115
    variable  go to state 116


State 109

   98 expr: '(' . expr ')'

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 134
    literal   go to state 115
    variable  go to state 116


State 110

  105 expr: NUL .

    $default  reduce using rule 105 (expr)


State 111

  112 literal: CHAR_START . char CHAR_END

    CHAR          shift, and go to state 135
    ESCAPE_START  shift, and go to state 136

    $default  reduce using rule 116 (char)

    char  go to state 137


State 112

  113 literal: STRING_START . string STRING_END

    STR  shift, and go to state 138

    $default  reduce using rule 119 (string)

    string  go to state 139


State 113

  120 variable: ident .
  121         | ident . arr_dim

    '['  shift, and go to state 83

    $default  reduce using rule 120 (variable)

    arr_dim  go to state 140


State 114

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
  127 idents: ident '=' expr .

    '='     shift, and go to state 141
    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    '|'     shift, and go to state 150
    '^'     shift, and go to state 151
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LAND    shift, and go to state 158
    LOR     shift, and go to state 159
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 127 (idents)


State 115

  103 expr: literal .

    $default  reduce using rule 103 (expr)


State 116

  104 expr: variable .

    $default  reduce using rule 104 (expr)


State 117

  126 idents: ident ',' idents .

    $default  reduce using rule 126 (idents)


State 118

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
  134 arr_dim: '[' expr . ']'

    '='     shift, and go to state 141
    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    '|'     shift, and go to state 150
    '^'     shift, and go to state 151
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LAND    shift, and go to state 158
    LOR     shift, and go to state 159
    ']'     shift, and go to state 162
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161


State 119

  140 parameters: type . ident
  141           | type . ident ',' parameters

    ID  shift, and go to state 49

    ident  go to state 163


State 120

  139 func_decl: type ident '(' parameters . ')'

    ')'  shift, and go to state 164


State 121

  133 array: ident arr_dim '=' . arr_content

    '{'  shift, and go to state 165

    arr_content  go to state 166


State 122

  135 arr_dim: arr_dim '[' . expr ']'

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 167
    literal   go to state 115
    variable  go to state 116


State 123

  132 array: ident . arr_dim
  133      | ident . arr_dim '=' arr_content

    '['  shift, and go to state 83

    arr_dim  go to state 85


State 124

  130 arrays: array ',' arrays .

    $default  reduce using rule 130 (arrays)


State 125

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
  100     | '+' expr .

    $default  reduce using rule 100 (expr)


State 126

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
   99     | '-' expr .

    $default  reduce using rule 99 (expr)


State 127

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
  101     | '*' expr .

    $default  reduce using rule 101 (expr)


State 128

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   90     | '!' expr .
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 90 (expr)


State 129

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   91     | '~' expr .
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 91 (expr)


State 130

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
  102     | '&' expr .

    $default  reduce using rule 102 (expr)


State 131

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   79     | INC expr .
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 79 (expr)


State 132

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   80     | DEC expr .
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 80 (expr)


State 133

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
   97     | '[' expr . ']'

    '='     shift, and go to state 141
    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    '|'     shift, and go to state 150
    '^'     shift, and go to state 151
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LAND    shift, and go to state 158
    LOR     shift, and go to state 159
    ']'     shift, and go to state 168
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161


State 134

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
   98     | '(' expr . ')'

    '='     shift, and go to state 141
    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    '|'     shift, and go to state 150
    '^'     shift, and go to state 151
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LAND    shift, and go to state 158
    LOR     shift, and go to state 159
    ')'     shift, and go to state 169
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161


State 135

  114 char: CHAR .

    $default  reduce using rule 114 (char)


State 136

  115 char: ESCAPE_START . ESCAPE_CHAR

    ESCAPE_CHAR  shift, and go to state 170


State 137

  112 literal: CHAR_START char . CHAR_END

    CHAR_END  shift, and go to state 171


State 138

  117 string: STR .
  118       | STR . ESCAPE_START ESCAPE_CHAR STR

    ESCAPE_START  shift, and go to state 172

    $default  reduce using rule 117 (string)


State 139

  113 literal: STRING_START string . STRING_END

    STRING_END  shift, and go to state 173


State 140

  121 variable: ident arr_dim .
  135 arr_dim: arr_dim . '[' expr ']'

    '['  shift, and go to state 122

    $default  reduce using rule 121 (variable)


State 141

   87 expr: expr '=' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 174
    literal   go to state 115
    variable  go to state 116


State 142

   72 expr: expr '+' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 175
    literal   go to state 115
    variable  go to state 116


State 143

   73 expr: expr '-' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 176
    literal   go to state 115
    variable  go to state 116


State 144

   74 expr: expr '*' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 177
    literal   go to state 115
    variable  go to state 116


State 145

   75 expr: expr '/' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 178
    literal   go to state 115
    variable  go to state 116


State 146

   76 expr: expr '%' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 179
    literal   go to state 115
    variable  go to state 116


State 147

   81 expr: expr '<' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 180
    literal   go to state 115
    variable  go to state 116


State 148

   83 expr: expr '>' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 181
    literal   go to state 115
    variable  go to state 116


State 149

   93 expr: expr '&' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 182
    literal   go to state 115
    variable  go to state 116


State 150

   94 expr: expr '|' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 183
    literal   go to state 115
    variable  go to state 116


State 151

   92 expr: expr '^' . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 184
    literal   go to state 115
    variable  go to state 116


State 152

   77 expr: expr INC .

    $default  reduce using rule 77 (expr)


State 153

   78 expr: expr DEC .

    $default  reduce using rule 78 (expr)


State 154

   82 expr: expr LEQ . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 185
    literal   go to state 115
    variable  go to state 116


State 155

   84 expr: expr GEQ . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 186
    literal   go to state 115
    variable  go to state 116


State 156

   85 expr: expr EQL . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 187
    literal   go to state 115
    variable  go to state 116


State 157

   86 expr: expr NEQ . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 188
    literal   go to state 115
    variable  go to state 116


State 158

   88 expr: expr LAND . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 189
    literal   go to state 115
    variable  go to state 116


State 159

   89 expr: expr LOR . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 190
    literal   go to state 115
    variable  go to state 116


State 160

   95 expr: expr LSHIFT . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 191
    literal   go to state 115
    variable  go to state 116


State 161

   96 expr: expr RSHIFT . expr

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 192
    literal   go to state 115
    variable  go to state 116


State 162

  134 arr_dim: '[' expr ']' .

    $default  reduce using rule 134 (arr_dim)


State 163

  140 parameters: type ident .
  141           | type ident . ',' parameters

    ','  shift, and go to state 193

    $default  reduce using rule 140 (parameters)


State 164

  139 func_decl: type ident '(' parameters ')' .

    $default  reduce using rule 139 (func_decl)


State 165

  136 arr_content: '{' . exprs '}'
  137            | '{' . arr_content '}'

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    '{'            shift, and go to state 165
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident        go to state 113
    expr         go to state 194
    literal      go to state 115
    variable     go to state 116
    exprs        go to state 195
    arr_content  go to state 196


State 166

  133 array: ident arr_dim '=' arr_content .
  138 arr_content: arr_content . ',' arr_content

    $default  reduce using rule 133 (array)


State 167

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
  135 arr_dim: arr_dim '[' expr . ']'

    '='     shift, and go to state 141
    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    '|'     shift, and go to state 150
    '^'     shift, and go to state 151
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LAND    shift, and go to state 158
    LOR     shift, and go to state 159
    ']'     shift, and go to state 198
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161


State 168

   97 expr: '[' expr ']' .

    $default  reduce using rule 97 (expr)


State 169

   98 expr: '(' expr ')' .

    $default  reduce using rule 98 (expr)


State 170

  115 char: ESCAPE_START ESCAPE_CHAR .

    $default  reduce using rule 115 (char)


State 171

  112 literal: CHAR_START char CHAR_END .

    $default  reduce using rule 112 (literal)


State 172

  118 string: STR ESCAPE_START . ESCAPE_CHAR STR

    ESCAPE_CHAR  shift, and go to state 199


State 173

  113 literal: STRING_START string STRING_END .

    $default  reduce using rule 113 (literal)


State 174

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   87     | expr '=' expr .
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '='     shift, and go to state 141
    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    '|'     shift, and go to state 150
    '^'     shift, and go to state 151
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LAND    shift, and go to state 158
    LOR     shift, and go to state 159
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 87 (expr)


State 175

   72 expr: expr . '+' expr
   72     | expr '+' expr .
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '*'  shift, and go to state 144
    '/'  shift, and go to state 145
    '%'  shift, and go to state 146
    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 72 (expr)


State 176

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   73     | expr '-' expr .
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '*'  shift, and go to state 144
    '/'  shift, and go to state 145
    '%'  shift, and go to state 146
    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 73 (expr)


State 177

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   74     | expr '*' expr .
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 74 (expr)


State 178

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   75     | expr '/' expr .
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 75 (expr)


State 179

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   76     | expr '%' expr .
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 76 (expr)


State 180

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   81     | expr '<' expr .
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 81 (expr)


State 181

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   83     | expr '>' expr .
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 83 (expr)


State 182

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   93     | expr '&' expr .
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 93 (expr)


State 183

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   94     | expr '|' expr .
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    '^'     shift, and go to state 151
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 94 (expr)


State 184

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   92     | expr '^' expr .
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 92 (expr)


State 185

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   82     | expr LEQ expr .
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 82 (expr)


State 186

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   84     | expr GEQ expr .
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 84 (expr)


State 187

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   85     | expr EQL expr .
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 85 (expr)


State 188

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   86     | expr NEQ expr .
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 86 (expr)


State 189

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   88     | expr LAND expr .
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    '|'     shift, and go to state 150
    '^'     shift, and go to state 151
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 88 (expr)


State 190

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   89     | expr LOR expr .
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr

    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    '|'     shift, and go to state 150
    '^'     shift, and go to state 151
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LAND    shift, and go to state 158
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 89 (expr)


State 191

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   95     | expr LSHIFT expr .
   96     | expr . RSHIFT expr

    '+'  shift, and go to state 142
    '-'  shift, and go to state 143
    '*'  shift, and go to state 144
    '/'  shift, and go to state 145
    '%'  shift, and go to state 146
    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 95 (expr)


State 192

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
   96     | expr RSHIFT expr .

    '+'  shift, and go to state 142
    '-'  shift, and go to state 143
    '*'  shift, and go to state 144
    '/'  shift, and go to state 145
    '%'  shift, and go to state 146
    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 96 (expr)


State 193

  141 parameters: type ident ',' . parameters

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 142 (parameters)

    type        go to state 119
    int_type    go to state 17
    char_type   go to state 18
    other_type  go to state 19
    parameters  go to state 200


State 194

   72 expr: expr . '+' expr
   73     | expr . '-' expr
   74     | expr . '*' expr
   75     | expr . '/' expr
   76     | expr . '%' expr
   77     | expr . INC
   78     | expr . DEC
   81     | expr . '<' expr
   82     | expr . LEQ expr
   83     | expr . '>' expr
   84     | expr . GEQ expr
   85     | expr . EQL expr
   86     | expr . NEQ expr
   87     | expr . '=' expr
   88     | expr . LAND expr
   89     | expr . LOR expr
   92     | expr . '^' expr
   93     | expr . '&' expr
   94     | expr . '|' expr
   95     | expr . LSHIFT expr
   96     | expr . RSHIFT expr
  122 exprs: expr .
  123      | expr . ',' exprs

    '='     shift, and go to state 141
    '+'     shift, and go to state 142
    '-'     shift, and go to state 143
    '*'     shift, and go to state 144
    '/'     shift, and go to state 145
    '%'     shift, and go to state 146
    '<'     shift, and go to state 147
    '>'     shift, and go to state 148
    '&'     shift, and go to state 149
    '|'     shift, and go to state 150
    '^'     shift, and go to state 151
    INC     shift, and go to state 152
    DEC     shift, and go to state 153
    LEQ     shift, and go to state 154
    GEQ     shift, and go to state 155
    EQL     shift, and go to state 156
    NEQ     shift, and go to state 157
    LAND    shift, and go to state 158
    LOR     shift, and go to state 159
    ','     shift, and go to state 201
    LSHIFT  shift, and go to state 160
    RSHIFT  shift, and go to state 161

    $default  reduce using rule 122 (exprs)


State 195

  136 arr_content: '{' exprs . '}'

    '}'  shift, and go to state 202


State 196

  137 arr_content: '{' arr_content . '}'
  138            | arr_content . ',' arr_content

    ','  shift, and go to state 197
    '}'  shift, and go to state 203


State 197

  138 arr_content: arr_content ',' . arr_content

    '{'  shift, and go to state 165

    arr_content  go to state 204


State 198

  135 arr_dim: arr_dim '[' expr ']' .

    $default  reduce using rule 135 (arr_dim)


State 199

  118 string: STR ESCAPE_START ESCAPE_CHAR . STR

    STR  shift, and go to state 205


State 200

  141 parameters: type ident ',' parameters .

    $default  reduce using rule 141 (parameters)


State 201

  123 exprs: expr ',' . exprs

    INT_NUM        shift, and go to state 94
    POS_INT_NUM    shift, and go to state 95
    NEG_INT_NUM    shift, and go to state 96
    FLOAT_NUM      shift, and go to state 97
    POS_FLOAT_NUM  shift, and go to state 98
    NEG_FLOAT_NUM  shift, and go to state 99
    ID             shift, and go to state 49
    '+'            shift, and go to state 100
    '-'            shift, and go to state 101
    '*'            shift, and go to state 102
    '!'            shift, and go to state 103
    '~'            shift, and go to state 104
    '&'            shift, and go to state 105
    INC            shift, and go to state 106
    DEC            shift, and go to state 107
    '['            shift, and go to state 108
    '('            shift, and go to state 109
    NUL            shift, and go to state 110
    CHAR_START     shift, and go to state 111
    STRING_START   shift, and go to state 112

    ident     go to state 113
    expr      go to state 194
    literal   go to state 115
    variable  go to state 116
    exprs     go to state 206


State 202

  136 arr_content: '{' exprs '}' .

    $default  reduce using rule 136 (arr_content)


State 203

  137 arr_content: '{' arr_content '}' .

    $default  reduce using rule 137 (arr_content)


State 204

  138 arr_content: arr_content . ',' arr_content
  138            | arr_content ',' arr_content .

    $default  reduce using rule 138 (arr_content)


State 205

  118 string: STR ESCAPE_START ESCAPE_CHAR STR .

    $default  reduce using rule 118 (string)


State 206

  123 exprs: expr ',' exprs .

    $default  reduce using rule 123 (exprs)
