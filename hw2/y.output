Terminals unused in grammar

   '<'
   '>'
   '!'
   '&'
   '|'
   INC
   DEC
   LEQ
   GEQ
   EQL
   NEQ
   LAND
   LOR
   ':'
   '.'
   STRUCT
   RETURN
   LSHIFT
   RSHIFT
   FOR
   DO
   WHILE
   BREAK
   CONTINUE
   IF
   ELSE
   SWITCH
   CASE
   DEFAULT
   '^'
   '~'
   UMINUS
   UPLUS


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement statements
    3           | statement

    4 statement: global_variable_decls

    5 global_variable_decls: scalar_decl ';'
    6                      | array_decl ';'
    7                      | func_decl ';'
    8                      | func_def

    9 type: int_type
   10     | char_type
   11     | other_type
   12     | CONST

   13 int_type: CONST SIGNED LONGLONG INT
   14         | CONST SIGNED LONG INT
   15         | CONST SIGNED SHORT INT
   16         | CONST SIGNED INT
   17         | CONST UNSIGNED LONGLONG INT
   18         | CONST UNSIGNED LONG INT
   19         | CONST UNSIGNED SHORT INT
   20         | CONST UNSIGNED INT
   21         | CONST LONGLONG INT
   22         | CONST LONG INT
   23         | CONST SHORT INT
   24         | CONST INT
   25         | SIGNED LONGLONG INT
   26         | SIGNED LONG INT
   27         | SIGNED SHORT INT
   28         | SIGNED INT
   29         | UNSIGNED LONGLONG INT
   30         | UNSIGNED LONG INT
   31         | UNSIGNED SHORT INT
   32         | UNSIGNED INT
   33         | LONGLONG INT
   34         | LONG INT
   35         | SHORT INT
   36         | INT

   37 char_type: CONST SIGNED LONGLONG
   38          | CONST SIGNED LONG
   39          | CONST SIGNED SHORT
   40          | CONST SIGNED CHAR
   41          | CONST UNSIGNED LONGLONG
   42          | CONST UNSIGNED LONG
   43          | CONST UNSIGNED SHORT
   44          | CONST UNSIGNED CHAR
   45          | CONST LONGLONG
   46          | CONST LONG
   47          | CONST SHORT
   48          | CONST CHAR
   49          | SIGNED LONGLONG
   50          | SIGNED LONG
   51          | SIGNED SHORT
   52          | SIGNED CHAR
   53          | UNSIGNED LONGLONG
   54          | UNSIGNED LONG
   55          | UNSIGNED SHORT
   56          | UNSIGNED CHAR
   57          | LONGLONG
   58          | LONG
   59          | SHORT
   60          | CHAR

   61 other_type: CONST SIGNED
   62           | CONST UNSIGNED
   63           | CONST FLOAT
   64           | CONST DOUBLE
   65           | CONST VOID
   66           | SIGNED
   67           | UNSIGNED
   68           | FLOAT
   69           | DOUBLE
   70           | VOID

   71 ident: ID
   72      | '*' ID

   73 expr: expr '+' expr
   74     | expr '-' expr
   75     | expr '*' expr
   76     | expr '/' expr
   77     | expr '%' expr
   78     | literal

   79 literal: INT_NUM
   80        | FLOAT_NUM
   81        | CHAR_START char CHAR_END
   82        | STRING_START string STRING_END

   83 char: CHAR
   84     | ESCAPE_START ESCAPE_CHAR
   85     | %empty

   86 string: STR
   87       | STR ESCAPE_START ESCAPE_CHAR STR
   88       | %empty

   89 exprs: expr
   90      | expr ',' exprs

   91 scalar_decl: type idents

   92 idents: ident ',' idents
   93       | ident '=' expr
   94       | ident

   95 array_decl: type arrays

   96 arrays: array ',' arrays
   97       | array

   98 array: ident arr_dim
   99      | ident arr_dim '=' arr_content

  100 arr_dim: '[' expr ']'
  101        | '[' expr ']' arr_dim

  102 arr_content: '{' exprs '}'
  103            | '{' arr_content '}'
  104            | arr_content ',' arr_content

  105 func_decl: type ident '(' parameters ')'

  106 parameters: type ident
  107           | type ident ',' parameters
  108           | %empty

  109 func_def: func_decl compound_stmt

  110 compound_stmt: '{' '}'


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'%' (37) 77
'&' (38)
'(' (40) 105
')' (41) 105
'*' (42) 72 75
'+' (43) 73
',' (44) 90 92 96 104 107
'-' (45) 74
'.' (46)
'/' (47) 76
':' (58)
';' (59) 5 6 7
'<' (60)
'=' (61) 93 99
'>' (62)
'[' (91) 100 101
']' (93) 100 101
'^' (94)
'{' (123) 102 103 110
'|' (124)
'}' (125) 102 103 110
'~' (126)
error (256)
INT_NUM (258) 79
FLOAT_NUM (259) 80
ID (260) 71 72
INC (261)
DEC (262)
LEQ (263)
GEQ (264)
EQL (265)
NEQ (266)
LAND (267)
LOR (268)
CONST (269) 12 13 14 15 16 17 18 19 20 21 22 23 24 37 38 39 40 41 42
    43 44 45 46 47 48 61 62 63 64 65
SIGNED (270) 13 14 15 16 25 26 27 28 37 38 39 40 49 50 51 52 61 66
UNSIGNED (271) 17 18 19 20 29 30 31 32 41 42 43 44 53 54 55 56 62 67
SHORT (272) 15 19 23 27 31 35 39 43 47 51 55 59
LONG (273) 14 18 22 26 30 34 38 42 46 50 54 58
LONGLONG (274) 13 17 21 25 29 33 37 41 45 49 53 57
INT (275) 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36
CHAR (276) 40 44 48 52 56 60 83
DOUBLE (277) 64 69
VOID (278) 65 70
FLOAT (279) 63 68
STRUCT (280)
RETURN (281)
LSHIFT (282)
RSHIFT (283)
STR (284) 86 87
FOR (285)
DO (286)
WHILE (287)
BREAK (288)
CONTINUE (289)
IF (290)
ELSE (291)
SWITCH (292)
CASE (293)
DEFAULT (294)
CHAR_START (295) 81
CHAR_END (296) 81
ESCAPE_START (297) 84 87
ESCAPE_CHAR (298) 84 87
STRING_START (299) 82
STRING_END (300) 82
UMINUS (301)
UPLUS (302)


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
program (72)
    on left: 1, on right: 0
statements (73)
    on left: 2 3, on right: 1 2
statement (74)
    on left: 4, on right: 2 3
global_variable_decls (75)
    on left: 5 6 7 8, on right: 4
type (76)
    on left: 9 10 11 12, on right: 91 95 105 106 107
int_type (77)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    31 32 33 34 35 36, on right: 9
char_type (78)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58 59 60, on right: 10
other_type (79)
    on left: 61 62 63 64 65 66 67 68 69 70, on right: 11
ident (80)
    on left: 71 72, on right: 92 93 94 98 99 105 106 107
expr (81)
    on left: 73 74 75 76 77 78, on right: 73 74 75 76 77 89 90 93 100
    101
literal (82)
    on left: 79 80 81 82, on right: 78
char (83)
    on left: 83 84 85, on right: 81
string (84)
    on left: 86 87 88, on right: 82
exprs (85)
    on left: 89 90, on right: 90 102
scalar_decl (86)
    on left: 91, on right: 5
idents (87)
    on left: 92 93 94, on right: 91 92
array_decl (88)
    on left: 95, on right: 6
arrays (89)
    on left: 96 97, on right: 95 96
array (90)
    on left: 98 99, on right: 96 97
arr_dim (91)
    on left: 100 101, on right: 98 99 101
arr_content (92)
    on left: 102 103 104, on right: 99 103 104
func_decl (93)
    on left: 105, on right: 7 109
parameters (94)
    on left: 106 107 108, on right: 105 107
func_def (95)
    on left: 109, on right: 8
compound_stmt (96)
    on left: 110, on right: 109


State 0

    0 $accept: . program $end

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    program                go to state 12
    statements             go to state 13
    statement              go to state 14
    global_variable_decls  go to state 15
    type                   go to state 16
    int_type               go to state 17
    char_type              go to state 18
    other_type             go to state 19
    scalar_decl            go to state 20
    array_decl             go to state 21
    func_decl              go to state 22
    func_def               go to state 23


State 1

   12 type: CONST .
   13 int_type: CONST . SIGNED LONGLONG INT
   14         | CONST . SIGNED LONG INT
   15         | CONST . SIGNED SHORT INT
   16         | CONST . SIGNED INT
   17         | CONST . UNSIGNED LONGLONG INT
   18         | CONST . UNSIGNED LONG INT
   19         | CONST . UNSIGNED SHORT INT
   20         | CONST . UNSIGNED INT
   21         | CONST . LONGLONG INT
   22         | CONST . LONG INT
   23         | CONST . SHORT INT
   24         | CONST . INT
   37 char_type: CONST . SIGNED LONGLONG
   38          | CONST . SIGNED LONG
   39          | CONST . SIGNED SHORT
   40          | CONST . SIGNED CHAR
   41          | CONST . UNSIGNED LONGLONG
   42          | CONST . UNSIGNED LONG
   43          | CONST . UNSIGNED SHORT
   44          | CONST . UNSIGNED CHAR
   45          | CONST . LONGLONG
   46          | CONST . LONG
   47          | CONST . SHORT
   48          | CONST . CHAR
   61 other_type: CONST . SIGNED
   62           | CONST . UNSIGNED
   63           | CONST . FLOAT
   64           | CONST . DOUBLE
   65           | CONST . VOID

    SIGNED    shift, and go to state 24
    UNSIGNED  shift, and go to state 25
    SHORT     shift, and go to state 26
    LONG      shift, and go to state 27
    LONGLONG  shift, and go to state 28
    INT       shift, and go to state 29
    CHAR      shift, and go to state 30
    DOUBLE    shift, and go to state 31
    VOID      shift, and go to state 32
    FLOAT     shift, and go to state 33

    $default  reduce using rule 12 (type)


State 2

   25 int_type: SIGNED . LONGLONG INT
   26         | SIGNED . LONG INT
   27         | SIGNED . SHORT INT
   28         | SIGNED . INT
   49 char_type: SIGNED . LONGLONG
   50          | SIGNED . LONG
   51          | SIGNED . SHORT
   52          | SIGNED . CHAR
   66 other_type: SIGNED .

    SHORT     shift, and go to state 34
    LONG      shift, and go to state 35
    LONGLONG  shift, and go to state 36
    INT       shift, and go to state 37
    CHAR      shift, and go to state 38

    $default  reduce using rule 66 (other_type)


State 3

   29 int_type: UNSIGNED . LONGLONG INT
   30         | UNSIGNED . LONG INT
   31         | UNSIGNED . SHORT INT
   32         | UNSIGNED . INT
   53 char_type: UNSIGNED . LONGLONG
   54          | UNSIGNED . LONG
   55          | UNSIGNED . SHORT
   56          | UNSIGNED . CHAR
   67 other_type: UNSIGNED .

    SHORT     shift, and go to state 39
    LONG      shift, and go to state 40
    LONGLONG  shift, and go to state 41
    INT       shift, and go to state 42
    CHAR      shift, and go to state 43

    $default  reduce using rule 67 (other_type)


State 4

   35 int_type: SHORT . INT
   59 char_type: SHORT .

    INT  shift, and go to state 44

    $default  reduce using rule 59 (char_type)


State 5

   34 int_type: LONG . INT
   58 char_type: LONG .

    INT  shift, and go to state 45

    $default  reduce using rule 58 (char_type)


State 6

   33 int_type: LONGLONG . INT
   57 char_type: LONGLONG .

    INT  shift, and go to state 46

    $default  reduce using rule 57 (char_type)


State 7

   36 int_type: INT .

    $default  reduce using rule 36 (int_type)


State 8

   60 char_type: CHAR .

    $default  reduce using rule 60 (char_type)


State 9

   69 other_type: DOUBLE .

    $default  reduce using rule 69 (other_type)


State 10

   70 other_type: VOID .

    $default  reduce using rule 70 (other_type)


State 11

   68 other_type: FLOAT .

    $default  reduce using rule 68 (other_type)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 47


State 13

    1 program: statements .

    $default  reduce using rule 1 (program)


State 14

    2 statements: statement . statements
    3           | statement .

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 3 (statements)

    statements             go to state 48
    statement              go to state 14
    global_variable_decls  go to state 15
    type                   go to state 16
    int_type               go to state 17
    char_type              go to state 18
    other_type             go to state 19
    scalar_decl            go to state 20
    array_decl             go to state 21
    func_decl              go to state 22
    func_def               go to state 23


State 15

    4 statement: global_variable_decls .

    $default  reduce using rule 4 (statement)


State 16

   91 scalar_decl: type . idents
   95 array_decl: type . arrays
  105 func_decl: type . ident '(' parameters ')'

    ID   shift, and go to state 49
    '*'  shift, and go to state 50

    ident   go to state 51
    idents  go to state 52
    arrays  go to state 53
    array   go to state 54


State 17

    9 type: int_type .

    $default  reduce using rule 9 (type)


State 18

   10 type: char_type .

    $default  reduce using rule 10 (type)


State 19

   11 type: other_type .

    $default  reduce using rule 11 (type)


State 20

    5 global_variable_decls: scalar_decl . ';'

    ';'  shift, and go to state 55


State 21

    6 global_variable_decls: array_decl . ';'

    ';'  shift, and go to state 56


State 22

    7 global_variable_decls: func_decl . ';'
  109 func_def: func_decl . compound_stmt

    ';'  shift, and go to state 57
    '{'  shift, and go to state 58

    compound_stmt  go to state 59


State 23

    8 global_variable_decls: func_def .

    $default  reduce using rule 8 (global_variable_decls)


State 24

   13 int_type: CONST SIGNED . LONGLONG INT
   14         | CONST SIGNED . LONG INT
   15         | CONST SIGNED . SHORT INT
   16         | CONST SIGNED . INT
   37 char_type: CONST SIGNED . LONGLONG
   38          | CONST SIGNED . LONG
   39          | CONST SIGNED . SHORT
   40          | CONST SIGNED . CHAR
   61 other_type: CONST SIGNED .

    SHORT     shift, and go to state 60
    LONG      shift, and go to state 61
    LONGLONG  shift, and go to state 62
    INT       shift, and go to state 63
    CHAR      shift, and go to state 64

    $default  reduce using rule 61 (other_type)


State 25

   17 int_type: CONST UNSIGNED . LONGLONG INT
   18         | CONST UNSIGNED . LONG INT
   19         | CONST UNSIGNED . SHORT INT
   20         | CONST UNSIGNED . INT
   41 char_type: CONST UNSIGNED . LONGLONG
   42          | CONST UNSIGNED . LONG
   43          | CONST UNSIGNED . SHORT
   44          | CONST UNSIGNED . CHAR
   62 other_type: CONST UNSIGNED .

    SHORT     shift, and go to state 65
    LONG      shift, and go to state 66
    LONGLONG  shift, and go to state 67
    INT       shift, and go to state 68
    CHAR      shift, and go to state 69

    $default  reduce using rule 62 (other_type)


State 26

   23 int_type: CONST SHORT . INT
   47 char_type: CONST SHORT .

    INT  shift, and go to state 70

    $default  reduce using rule 47 (char_type)


State 27

   22 int_type: CONST LONG . INT
   46 char_type: CONST LONG .

    INT  shift, and go to state 71

    $default  reduce using rule 46 (char_type)


State 28

   21 int_type: CONST LONGLONG . INT
   45 char_type: CONST LONGLONG .

    INT  shift, and go to state 72

    $default  reduce using rule 45 (char_type)


State 29

   24 int_type: CONST INT .

    $default  reduce using rule 24 (int_type)


State 30

   48 char_type: CONST CHAR .

    $default  reduce using rule 48 (char_type)


State 31

   64 other_type: CONST DOUBLE .

    $default  reduce using rule 64 (other_type)


State 32

   65 other_type: CONST VOID .

    $default  reduce using rule 65 (other_type)


State 33

   63 other_type: CONST FLOAT .

    $default  reduce using rule 63 (other_type)


State 34

   27 int_type: SIGNED SHORT . INT
   51 char_type: SIGNED SHORT .

    INT  shift, and go to state 73

    $default  reduce using rule 51 (char_type)


State 35

   26 int_type: SIGNED LONG . INT
   50 char_type: SIGNED LONG .

    INT  shift, and go to state 74

    $default  reduce using rule 50 (char_type)


State 36

   25 int_type: SIGNED LONGLONG . INT
   49 char_type: SIGNED LONGLONG .

    INT  shift, and go to state 75

    $default  reduce using rule 49 (char_type)


State 37

   28 int_type: SIGNED INT .

    $default  reduce using rule 28 (int_type)


State 38

   52 char_type: SIGNED CHAR .

    $default  reduce using rule 52 (char_type)


State 39

   31 int_type: UNSIGNED SHORT . INT
   55 char_type: UNSIGNED SHORT .

    INT  shift, and go to state 76

    $default  reduce using rule 55 (char_type)


State 40

   30 int_type: UNSIGNED LONG . INT
   54 char_type: UNSIGNED LONG .

    INT  shift, and go to state 77

    $default  reduce using rule 54 (char_type)


State 41

   29 int_type: UNSIGNED LONGLONG . INT
   53 char_type: UNSIGNED LONGLONG .

    INT  shift, and go to state 78

    $default  reduce using rule 53 (char_type)


State 42

   32 int_type: UNSIGNED INT .

    $default  reduce using rule 32 (int_type)


State 43

   56 char_type: UNSIGNED CHAR .

    $default  reduce using rule 56 (char_type)


State 44

   35 int_type: SHORT INT .

    $default  reduce using rule 35 (int_type)


State 45

   34 int_type: LONG INT .

    $default  reduce using rule 34 (int_type)


State 46

   33 int_type: LONGLONG INT .

    $default  reduce using rule 33 (int_type)


State 47

    0 $accept: program $end .

    $default  accept


State 48

    2 statements: statement statements .

    $default  reduce using rule 2 (statements)


State 49

   71 ident: ID .

    $default  reduce using rule 71 (ident)


State 50

   72 ident: '*' . ID

    ID  shift, and go to state 79


State 51

   92 idents: ident . ',' idents
   93       | ident . '=' expr
   94       | ident .
   98 array: ident . arr_dim
   99      | ident . arr_dim '=' arr_content
  105 func_decl: type ident . '(' parameters ')'

    '='  shift, and go to state 80
    ','  shift, and go to state 81
    '['  shift, and go to state 82
    '('  shift, and go to state 83

    $default  reduce using rule 94 (idents)

    arr_dim  go to state 84


State 52

   91 scalar_decl: type idents .

    $default  reduce using rule 91 (scalar_decl)


State 53

   95 array_decl: type arrays .

    $default  reduce using rule 95 (array_decl)


State 54

   96 arrays: array . ',' arrays
   97       | array .

    ','  shift, and go to state 85

    $default  reduce using rule 97 (arrays)


State 55

    5 global_variable_decls: scalar_decl ';' .

    $default  reduce using rule 5 (global_variable_decls)


State 56

    6 global_variable_decls: array_decl ';' .

    $default  reduce using rule 6 (global_variable_decls)


State 57

    7 global_variable_decls: func_decl ';' .

    $default  reduce using rule 7 (global_variable_decls)


State 58

  110 compound_stmt: '{' . '}'

    '}'  shift, and go to state 86


State 59

  109 func_def: func_decl compound_stmt .

    $default  reduce using rule 109 (func_def)


State 60

   15 int_type: CONST SIGNED SHORT . INT
   39 char_type: CONST SIGNED SHORT .

    INT  shift, and go to state 87

    $default  reduce using rule 39 (char_type)


State 61

   14 int_type: CONST SIGNED LONG . INT
   38 char_type: CONST SIGNED LONG .

    INT  shift, and go to state 88

    $default  reduce using rule 38 (char_type)


State 62

   13 int_type: CONST SIGNED LONGLONG . INT
   37 char_type: CONST SIGNED LONGLONG .

    INT  shift, and go to state 89

    $default  reduce using rule 37 (char_type)


State 63

   16 int_type: CONST SIGNED INT .

    $default  reduce using rule 16 (int_type)


State 64

   40 char_type: CONST SIGNED CHAR .

    $default  reduce using rule 40 (char_type)


State 65

   19 int_type: CONST UNSIGNED SHORT . INT
   43 char_type: CONST UNSIGNED SHORT .

    INT  shift, and go to state 90

    $default  reduce using rule 43 (char_type)


State 66

   18 int_type: CONST UNSIGNED LONG . INT
   42 char_type: CONST UNSIGNED LONG .

    INT  shift, and go to state 91

    $default  reduce using rule 42 (char_type)


State 67

   17 int_type: CONST UNSIGNED LONGLONG . INT
   41 char_type: CONST UNSIGNED LONGLONG .

    INT  shift, and go to state 92

    $default  reduce using rule 41 (char_type)


State 68

   20 int_type: CONST UNSIGNED INT .

    $default  reduce using rule 20 (int_type)


State 69

   44 char_type: CONST UNSIGNED CHAR .

    $default  reduce using rule 44 (char_type)


State 70

   23 int_type: CONST SHORT INT .

    $default  reduce using rule 23 (int_type)


State 71

   22 int_type: CONST LONG INT .

    $default  reduce using rule 22 (int_type)


State 72

   21 int_type: CONST LONGLONG INT .

    $default  reduce using rule 21 (int_type)


State 73

   27 int_type: SIGNED SHORT INT .

    $default  reduce using rule 27 (int_type)


State 74

   26 int_type: SIGNED LONG INT .

    $default  reduce using rule 26 (int_type)


State 75

   25 int_type: SIGNED LONGLONG INT .

    $default  reduce using rule 25 (int_type)


State 76

   31 int_type: UNSIGNED SHORT INT .

    $default  reduce using rule 31 (int_type)


State 77

   30 int_type: UNSIGNED LONG INT .

    $default  reduce using rule 30 (int_type)


State 78

   29 int_type: UNSIGNED LONGLONG INT .

    $default  reduce using rule 29 (int_type)


State 79

   72 ident: '*' ID .

    $default  reduce using rule 72 (ident)


State 80

   93 idents: ident '=' . expr

    INT_NUM       shift, and go to state 93
    FLOAT_NUM     shift, and go to state 94
    CHAR_START    shift, and go to state 95
    STRING_START  shift, and go to state 96

    expr     go to state 97
    literal  go to state 98


State 81

   92 idents: ident ',' . idents

    ID   shift, and go to state 49
    '*'  shift, and go to state 50

    ident   go to state 99
    idents  go to state 100


State 82

  100 arr_dim: '[' . expr ']'
  101        | '[' . expr ']' arr_dim

    INT_NUM       shift, and go to state 93
    FLOAT_NUM     shift, and go to state 94
    CHAR_START    shift, and go to state 95
    STRING_START  shift, and go to state 96

    expr     go to state 101
    literal  go to state 98


State 83

  105 func_decl: type ident '(' . parameters ')'

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 108 (parameters)

    type        go to state 102
    int_type    go to state 17
    char_type   go to state 18
    other_type  go to state 19
    parameters  go to state 103


State 84

   98 array: ident arr_dim .
   99      | ident arr_dim . '=' arr_content

    '='  shift, and go to state 104

    $default  reduce using rule 98 (array)


State 85

   96 arrays: array ',' . arrays

    ID   shift, and go to state 49
    '*'  shift, and go to state 50

    ident   go to state 105
    arrays  go to state 106
    array   go to state 54


State 86

  110 compound_stmt: '{' '}' .

    $default  reduce using rule 110 (compound_stmt)


State 87

   15 int_type: CONST SIGNED SHORT INT .

    $default  reduce using rule 15 (int_type)


State 88

   14 int_type: CONST SIGNED LONG INT .

    $default  reduce using rule 14 (int_type)


State 89

   13 int_type: CONST SIGNED LONGLONG INT .

    $default  reduce using rule 13 (int_type)


State 90

   19 int_type: CONST UNSIGNED SHORT INT .

    $default  reduce using rule 19 (int_type)


State 91

   18 int_type: CONST UNSIGNED LONG INT .

    $default  reduce using rule 18 (int_type)


State 92

   17 int_type: CONST UNSIGNED LONGLONG INT .

    $default  reduce using rule 17 (int_type)


State 93

   79 literal: INT_NUM .

    $default  reduce using rule 79 (literal)


State 94

   80 literal: FLOAT_NUM .

    $default  reduce using rule 80 (literal)


State 95

   81 literal: CHAR_START . char CHAR_END

    CHAR          shift, and go to state 107
    ESCAPE_START  shift, and go to state 108

    $default  reduce using rule 85 (char)

    char  go to state 109


State 96

   82 literal: STRING_START . string STRING_END

    STR  shift, and go to state 110

    $default  reduce using rule 88 (string)

    string  go to state 111


State 97

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   77     | expr . '%' expr
   93 idents: ident '=' expr .

    '+'  shift, and go to state 112
    '-'  shift, and go to state 113
    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116

    $default  reduce using rule 93 (idents)


State 98

   78 expr: literal .

    $default  reduce using rule 78 (expr)


State 99

   92 idents: ident . ',' idents
   93       | ident . '=' expr
   94       | ident .

    '='  shift, and go to state 80
    ','  shift, and go to state 81

    $default  reduce using rule 94 (idents)


State 100

   92 idents: ident ',' idents .

    $default  reduce using rule 92 (idents)


State 101

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   77     | expr . '%' expr
  100 arr_dim: '[' expr . ']'
  101        | '[' expr . ']' arr_dim

    '+'  shift, and go to state 112
    '-'  shift, and go to state 113
    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116
    ']'  shift, and go to state 117


State 102

  106 parameters: type . ident
  107           | type . ident ',' parameters

    ID   shift, and go to state 49
    '*'  shift, and go to state 50

    ident  go to state 118


State 103

  105 func_decl: type ident '(' parameters . ')'

    ')'  shift, and go to state 119


State 104

   99 array: ident arr_dim '=' . arr_content

    '{'  shift, and go to state 120

    arr_content  go to state 121


State 105

   98 array: ident . arr_dim
   99      | ident . arr_dim '=' arr_content

    '['  shift, and go to state 82

    arr_dim  go to state 84


State 106

   96 arrays: array ',' arrays .

    $default  reduce using rule 96 (arrays)


State 107

   83 char: CHAR .

    $default  reduce using rule 83 (char)


State 108

   84 char: ESCAPE_START . ESCAPE_CHAR

    ESCAPE_CHAR  shift, and go to state 122


State 109

   81 literal: CHAR_START char . CHAR_END

    CHAR_END  shift, and go to state 123


State 110

   86 string: STR .
   87       | STR . ESCAPE_START ESCAPE_CHAR STR

    ESCAPE_START  shift, and go to state 124

    $default  reduce using rule 86 (string)


State 111

   82 literal: STRING_START string . STRING_END

    STRING_END  shift, and go to state 125


State 112

   73 expr: expr '+' . expr

    INT_NUM       shift, and go to state 93
    FLOAT_NUM     shift, and go to state 94
    CHAR_START    shift, and go to state 95
    STRING_START  shift, and go to state 96

    expr     go to state 126
    literal  go to state 98


State 113

   74 expr: expr '-' . expr

    INT_NUM       shift, and go to state 93
    FLOAT_NUM     shift, and go to state 94
    CHAR_START    shift, and go to state 95
    STRING_START  shift, and go to state 96

    expr     go to state 127
    literal  go to state 98


State 114

   75 expr: expr '*' . expr

    INT_NUM       shift, and go to state 93
    FLOAT_NUM     shift, and go to state 94
    CHAR_START    shift, and go to state 95
    STRING_START  shift, and go to state 96

    expr     go to state 128
    literal  go to state 98


State 115

   76 expr: expr '/' . expr

    INT_NUM       shift, and go to state 93
    FLOAT_NUM     shift, and go to state 94
    CHAR_START    shift, and go to state 95
    STRING_START  shift, and go to state 96

    expr     go to state 129
    literal  go to state 98


State 116

   77 expr: expr '%' . expr

    INT_NUM       shift, and go to state 93
    FLOAT_NUM     shift, and go to state 94
    CHAR_START    shift, and go to state 95
    STRING_START  shift, and go to state 96

    expr     go to state 130
    literal  go to state 98


State 117

  100 arr_dim: '[' expr ']' .
  101        | '[' expr ']' . arr_dim

    '['  shift, and go to state 82

    $default  reduce using rule 100 (arr_dim)

    arr_dim  go to state 131


State 118

  106 parameters: type ident .
  107           | type ident . ',' parameters

    ','  shift, and go to state 132

    $default  reduce using rule 106 (parameters)


State 119

  105 func_decl: type ident '(' parameters ')' .

    $default  reduce using rule 105 (func_decl)


State 120

  102 arr_content: '{' . exprs '}'
  103            | '{' . arr_content '}'

    INT_NUM       shift, and go to state 93
    FLOAT_NUM     shift, and go to state 94
    '{'           shift, and go to state 120
    CHAR_START    shift, and go to state 95
    STRING_START  shift, and go to state 96

    expr         go to state 133
    literal      go to state 98
    exprs        go to state 134
    arr_content  go to state 135


State 121

   99 array: ident arr_dim '=' arr_content .
  104 arr_content: arr_content . ',' arr_content

    $default  reduce using rule 99 (array)


State 122

   84 char: ESCAPE_START ESCAPE_CHAR .

    $default  reduce using rule 84 (char)


State 123

   81 literal: CHAR_START char CHAR_END .

    $default  reduce using rule 81 (literal)


State 124

   87 string: STR ESCAPE_START . ESCAPE_CHAR STR

    ESCAPE_CHAR  shift, and go to state 137


State 125

   82 literal: STRING_START string STRING_END .

    $default  reduce using rule 82 (literal)


State 126

   73 expr: expr . '+' expr
   73     | expr '+' expr .
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   77     | expr . '%' expr

    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116

    $default  reduce using rule 73 (expr)


State 127

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   74     | expr '-' expr .
   75     | expr . '*' expr
   76     | expr . '/' expr
   77     | expr . '%' expr

    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116

    $default  reduce using rule 74 (expr)


State 128

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   75     | expr '*' expr .
   76     | expr . '/' expr
   77     | expr . '%' expr

    $default  reduce using rule 75 (expr)


State 129

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   76     | expr '/' expr .
   77     | expr . '%' expr

    $default  reduce using rule 76 (expr)


State 130

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   77     | expr . '%' expr
   77     | expr '%' expr .

    $default  reduce using rule 77 (expr)


State 131

  101 arr_dim: '[' expr ']' arr_dim .

    $default  reduce using rule 101 (arr_dim)


State 132

  107 parameters: type ident ',' . parameters

    CONST     shift, and go to state 1
    SIGNED    shift, and go to state 2
    UNSIGNED  shift, and go to state 3
    SHORT     shift, and go to state 4
    LONG      shift, and go to state 5
    LONGLONG  shift, and go to state 6
    INT       shift, and go to state 7
    CHAR      shift, and go to state 8
    DOUBLE    shift, and go to state 9
    VOID      shift, and go to state 10
    FLOAT     shift, and go to state 11

    $default  reduce using rule 108 (parameters)

    type        go to state 102
    int_type    go to state 17
    char_type   go to state 18
    other_type  go to state 19
    parameters  go to state 138


State 133

   73 expr: expr . '+' expr
   74     | expr . '-' expr
   75     | expr . '*' expr
   76     | expr . '/' expr
   77     | expr . '%' expr
   89 exprs: expr .
   90      | expr . ',' exprs

    '+'  shift, and go to state 112
    '-'  shift, and go to state 113
    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116
    ','  shift, and go to state 139

    $default  reduce using rule 89 (exprs)


State 134

  102 arr_content: '{' exprs . '}'

    '}'  shift, and go to state 140


State 135

  103 arr_content: '{' arr_content . '}'
  104            | arr_content . ',' arr_content

    ','  shift, and go to state 136
    '}'  shift, and go to state 141


State 136

  104 arr_content: arr_content ',' . arr_content

    '{'  shift, and go to state 120

    arr_content  go to state 142


State 137

   87 string: STR ESCAPE_START ESCAPE_CHAR . STR

    STR  shift, and go to state 143


State 138

  107 parameters: type ident ',' parameters .

    $default  reduce using rule 107 (parameters)


State 139

   90 exprs: expr ',' . exprs

    INT_NUM       shift, and go to state 93
    FLOAT_NUM     shift, and go to state 94
    CHAR_START    shift, and go to state 95
    STRING_START  shift, and go to state 96

    expr     go to state 133
    literal  go to state 98
    exprs    go to state 144


State 140

  102 arr_content: '{' exprs '}' .

    $default  reduce using rule 102 (arr_content)


State 141

  103 arr_content: '{' arr_content '}' .

    $default  reduce using rule 103 (arr_content)


State 142

  104 arr_content: arr_content . ',' arr_content
  104            | arr_content ',' arr_content .

    $default  reduce using rule 104 (arr_content)


State 143

   87 string: STR ESCAPE_START ESCAPE_CHAR STR .

    $default  reduce using rule 87 (string)


State 144

   90 exprs: expr ',' exprs .

    $default  reduce using rule 90 (exprs)
